"use strict";/**
 * InOrbit Edge SDK
 * 
 * Javascript interface to the InOrbit Robot Protocol.
 * 
 * Copyright 2021 InOrbit, Inc.
 */ // GENERATED CODE -- DO NOT EDIT!
var jspb=require("google-protobuf");var goog=jspb;var global=Function("return this")();goog.exportSymbol("proto.inorbit.AlertMessage",null,global);goog.exportSymbol("proto.inorbit.CameraMessage",null,global);goog.exportSymbol("proto.inorbit.CustomCommandRosMessage",null,global);goog.exportSymbol("proto.inorbit.CustomDataMessage",null,global);goog.exportSymbol("proto.inorbit.CustomScriptCommandMessage",null,global);goog.exportSymbol("proto.inorbit.CustomScriptStatusMessage",null,global);goog.exportSymbol("proto.inorbit.DatabagUpdateMessage",null,global);goog.exportSymbol("proto.inorbit.DiagnosticsMessage",null,global);goog.exportSymbol("proto.inorbit.DiskUsageMessage",null,global);goog.exportSymbol("proto.inorbit.Echo",null,global);goog.exportSymbol("proto.inorbit.FloatingPointList",null,global);goog.exportSymbol("proto.inorbit.KeyValueCustomElement",null,global);goog.exportSymbol("proto.inorbit.KeyValueMessage",null,global);goog.exportSymbol("proto.inorbit.KeyValuePairs",null,global);goog.exportSymbol("proto.inorbit.LaserMessage",null,global);goog.exportSymbol("proto.inorbit.LocationAndPoseMessage",null,global);goog.exportSymbol("proto.inorbit.MapMessage",null,global);goog.exportSymbol("proto.inorbit.MapRequest",null,global);goog.exportSymbol("proto.inorbit.ModuleStateOptionsMessage",null,global);goog.exportSymbol("proto.inorbit.Nav2DPathMessage",null,global);goog.exportSymbol("proto.inorbit.Nav2DWaypointFrame",null,global);goog.exportSymbol("proto.inorbit.Nav2DWaypointMessage",null,global);goog.exportSymbol("proto.inorbit.NetworkStatsMessage",null,global);goog.exportSymbol("proto.inorbit.NodeMonitorMessage",null,global);goog.exportSymbol("proto.inorbit.OdometryDataMessage",null,global);goog.exportSymbol("proto.inorbit.ParamMonitorMessage",null,global);goog.exportSymbol("proto.inorbit.PathDataMessage",null,global);goog.exportSymbol("proto.inorbit.PathPoint",null,global);goog.exportSymbol("proto.inorbit.PoseMessage",null,global);goog.exportSymbol("proto.inorbit.PoseMessageData",null,global);goog.exportSymbol("proto.inorbit.RobotFileData",null,global);goog.exportSymbol("proto.inorbit.RobotFilesUpdateMessage",null,global);goog.exportSymbol("proto.inorbit.RobotPath",null,global);goog.exportSymbol("proto.inorbit.RosDiagnosticsField",null,global);goog.exportSymbol("proto.inorbit.RosDiagnosticsMessage",null,global);goog.exportSymbol("proto.inorbit.RosDiagnosticsStatusMessage",null,global);goog.exportSymbol("proto.inorbit.RosMonitorMessage",null,global);goog.exportSymbol("proto.inorbit.RosOutMessage",null,global);goog.exportSymbol("proto.inorbit.RosbagUpdateMessage",null,global);goog.exportSymbol("proto.inorbit.ServiceMonitorMessage",null,global);goog.exportSymbol("proto.inorbit.StateOptions",null,global);goog.exportSymbol("proto.inorbit.SystemStatsMessage",null,global);goog.exportSymbol("proto.inorbit.TeleopGoCommand",null,global);goog.exportSymbol("proto.inorbit.TextFileMessage",null,global);goog.exportSymbol("proto.inorbit.TopicMonitorMessage",null,global);/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.DiskUsageMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.DiskUsageMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.DiskUsageMessage.displayName="proto.inorbit.DiskUsageMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.DiskUsageMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.DiskUsageMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.DiskUsageMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.DiskUsageMessage.toObject=function(includeInstance,msg){var f,obj={volumeId:jspb.Message.getFieldWithDefault(msg,1,""),usagePercentage:+jspb.Message.getFieldWithDefault(msg,2,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.DiskUsageMessage}
 */proto.inorbit.DiskUsageMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.DiskUsageMessage;return proto.inorbit.DiskUsageMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.DiskUsageMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.DiskUsageMessage}
 */proto.inorbit.DiskUsageMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setVolumeId(value);break;case 2:var value=reader.readFloat();msg.setUsagePercentage(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.DiskUsageMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.DiskUsageMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.DiskUsageMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.DiskUsageMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getVolumeId();if(f.length>0){writer.writeString(1,f)}f=message.getUsagePercentage();if(f!==0){writer.writeFloat(2,f)}};/**
 * optional string volume_id = 1;
 * @return {string}
 */proto.inorbit.DiskUsageMessage.prototype.getVolumeId=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.DiskUsageMessage.prototype.setVolumeId=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional float usage_percentage = 2;
 * @return {number}
 */proto.inorbit.DiskUsageMessage.prototype.getUsagePercentage=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.DiskUsageMessage.prototype.setUsagePercentage=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.NetworkStatsMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.NetworkStatsMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.NetworkStatsMessage.displayName="proto.inorbit.NetworkStatsMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.NetworkStatsMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.NetworkStatsMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.NetworkStatsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.NetworkStatsMessage.toObject=function(includeInstance,msg){var f,obj={interfaceId:jspb.Message.getFieldWithDefault(msg,1,""),tx:jspb.Message.getFieldWithDefault(msg,2,0),rx:jspb.Message.getFieldWithDefault(msg,3,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.NetworkStatsMessage}
 */proto.inorbit.NetworkStatsMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.NetworkStatsMessage;return proto.inorbit.NetworkStatsMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.NetworkStatsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.NetworkStatsMessage}
 */proto.inorbit.NetworkStatsMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setInterfaceId(value);break;case 2:var value=reader.readInt64();msg.setTx(value);break;case 3:var value=reader.readInt64();msg.setRx(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.NetworkStatsMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.NetworkStatsMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.NetworkStatsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.NetworkStatsMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getInterfaceId();if(f.length>0){writer.writeString(1,f)}f=message.getTx();if(f!==0){writer.writeInt64(2,f)}f=message.getRx();if(f!==0){writer.writeInt64(3,f)}};/**
 * optional string interface_id = 1;
 * @return {string}
 */proto.inorbit.NetworkStatsMessage.prototype.getInterfaceId=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.NetworkStatsMessage.prototype.setInterfaceId=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional int64 tx = 2;
 * @return {number}
 */proto.inorbit.NetworkStatsMessage.prototype.getTx=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.NetworkStatsMessage.prototype.setTx=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional int64 rx = 3;
 * @return {number}
 */proto.inorbit.NetworkStatsMessage.prototype.getRx=function(){return jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.NetworkStatsMessage.prototype.setRx=function(value){jspb.Message.setProto3IntField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.SystemStatsMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.SystemStatsMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.SystemStatsMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.SystemStatsMessage.displayName="proto.inorbit.SystemStatsMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.SystemStatsMessage.repeatedFields_=[15,16];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.SystemStatsMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.SystemStatsMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.SystemStatsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.SystemStatsMessage.toObject=function(includeInstance,msg){var f,obj={timestamp:jspb.Message.getFieldWithDefault(msg,1,0),elapsedSeconds:+jspb.Message.getFieldWithDefault(msg,2,0),cpuLoadPercentage:+jspb.Message.getFieldWithDefault(msg,3,0),networkInterface:jspb.Message.getFieldWithDefault(msg,4,""),totalTx:jspb.Message.getFieldWithDefault(msg,5,0),totalRx:jspb.Message.getFieldWithDefault(msg,6,0),inorbitTx:jspb.Message.getFieldWithDefault(msg,7,0),inorbitRx:jspb.Message.getFieldWithDefault(msg,8,0),hddUsagePercentage:+jspb.Message.getFieldWithDefault(msg,9,0),inorbitHddUsageMb:+jspb.Message.getFieldWithDefault(msg,10,0),inorbitHddUsagePercentage:+jspb.Message.getFieldWithDefault(msg,11,0),optionalDisksDataList:jspb.Message.toObjectList(msg.getOptionalDisksDataList(),proto.inorbit.DiskUsageMessage.toObject,includeInstance),optionalNetworkInterfacesDataList:jspb.Message.toObjectList(msg.getOptionalNetworkInterfacesDataList(),proto.inorbit.NetworkStatsMessage.toObject,includeInstance),ramUsagePercentage:+jspb.Message.getFieldWithDefault(msg,17,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.SystemStatsMessage}
 */proto.inorbit.SystemStatsMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.SystemStatsMessage;return proto.inorbit.SystemStatsMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.SystemStatsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.SystemStatsMessage}
 */proto.inorbit.SystemStatsMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTimestamp(value);break;case 2:var value=reader.readFloat();msg.setElapsedSeconds(value);break;case 3:var value=reader.readFloat();msg.setCpuLoadPercentage(value);break;case 4:var value=reader.readString();msg.setNetworkInterface(value);break;case 5:var value=reader.readInt64();msg.setTotalTx(value);break;case 6:var value=reader.readInt64();msg.setTotalRx(value);break;case 7:var value=reader.readInt64();msg.setInorbitTx(value);break;case 8:var value=reader.readInt64();msg.setInorbitRx(value);break;case 9:var value=reader.readFloat();msg.setHddUsagePercentage(value);break;case 10:var value=reader.readFloat();msg.setInorbitHddUsageMb(value);break;case 11:var value=reader.readFloat();msg.setInorbitHddUsagePercentage(value);break;case 15:var value=new proto.inorbit.DiskUsageMessage;reader.readMessage(value,proto.inorbit.DiskUsageMessage.deserializeBinaryFromReader);msg.addOptionalDisksData(value);break;case 16:var value=new proto.inorbit.NetworkStatsMessage;reader.readMessage(value,proto.inorbit.NetworkStatsMessage.deserializeBinaryFromReader);msg.addOptionalNetworkInterfacesData(value);break;case 17:var value=reader.readFloat();msg.setRamUsagePercentage(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.SystemStatsMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.SystemStatsMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.SystemStatsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.SystemStatsMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTimestamp();if(f!==0){writer.writeInt64(1,f)}f=message.getElapsedSeconds();if(f!==0){writer.writeFloat(2,f)}f=message.getCpuLoadPercentage();if(f!==0){writer.writeFloat(3,f)}f=message.getNetworkInterface();if(f.length>0){writer.writeString(4,f)}f=message.getTotalTx();if(f!==0){writer.writeInt64(5,f)}f=message.getTotalRx();if(f!==0){writer.writeInt64(6,f)}f=message.getInorbitTx();if(f!==0){writer.writeInt64(7,f)}f=message.getInorbitRx();if(f!==0){writer.writeInt64(8,f)}f=message.getHddUsagePercentage();if(f!==0){writer.writeFloat(9,f)}f=message.getInorbitHddUsageMb();if(f!==0){writer.writeFloat(10,f)}f=message.getInorbitHddUsagePercentage();if(f!==0){writer.writeFloat(11,f)}f=message.getOptionalDisksDataList();if(f.length>0){writer.writeRepeatedMessage(15,f,proto.inorbit.DiskUsageMessage.serializeBinaryToWriter)}f=message.getOptionalNetworkInterfacesDataList();if(f.length>0){writer.writeRepeatedMessage(16,f,proto.inorbit.NetworkStatsMessage.serializeBinaryToWriter)}f=message.getRamUsagePercentage();if(f!==0){writer.writeFloat(17,f)}};/**
 * optional int64 timestamp = 1;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getTimestamp=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setTimestamp=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional float elapsed_seconds = 2;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getElapsedSeconds=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setElapsedSeconds=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * optional float cpu_load_percentage = 3;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getCpuLoadPercentage=function(){return+jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setCpuLoadPercentage=function(value){jspb.Message.setProto3FloatField(this,3,value)};/**
 * optional string network_interface = 4;
 * @return {string}
 */proto.inorbit.SystemStatsMessage.prototype.getNetworkInterface=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.SystemStatsMessage.prototype.setNetworkInterface=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional int64 total_tx = 5;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getTotalTx=function(){return jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setTotalTx=function(value){jspb.Message.setProto3IntField(this,5,value)};/**
 * optional int64 total_rx = 6;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getTotalRx=function(){return jspb.Message.getFieldWithDefault(this,6,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setTotalRx=function(value){jspb.Message.setProto3IntField(this,6,value)};/**
 * optional int64 inorbit_tx = 7;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getInorbitTx=function(){return jspb.Message.getFieldWithDefault(this,7,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setInorbitTx=function(value){jspb.Message.setProto3IntField(this,7,value)};/**
 * optional int64 inorbit_rx = 8;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getInorbitRx=function(){return jspb.Message.getFieldWithDefault(this,8,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setInorbitRx=function(value){jspb.Message.setProto3IntField(this,8,value)};/**
 * optional float hdd_usage_percentage = 9;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getHddUsagePercentage=function(){return+jspb.Message.getFieldWithDefault(this,9,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setHddUsagePercentage=function(value){jspb.Message.setProto3FloatField(this,9,value)};/**
 * optional float inorbit_hdd_usage_mb = 10;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getInorbitHddUsageMb=function(){return+jspb.Message.getFieldWithDefault(this,10,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setInorbitHddUsageMb=function(value){jspb.Message.setProto3FloatField(this,10,value)};/**
 * optional float inorbit_hdd_usage_percentage = 11;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getInorbitHddUsagePercentage=function(){return+jspb.Message.getFieldWithDefault(this,11,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setInorbitHddUsagePercentage=function(value){jspb.Message.setProto3FloatField(this,11,value)};/**
 * repeated DiskUsageMessage optional_disks_data = 15;
 * @return {!Array.<!proto.inorbit.DiskUsageMessage>}
 */proto.inorbit.SystemStatsMessage.prototype.getOptionalDisksDataList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.DiskUsageMessage,15)};/** @param {!Array.<!proto.inorbit.DiskUsageMessage>} value */proto.inorbit.SystemStatsMessage.prototype.setOptionalDisksDataList=function(value){jspb.Message.setRepeatedWrapperField(this,15,value)};/**
 * @param {!proto.inorbit.DiskUsageMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.DiskUsageMessage}
 */proto.inorbit.SystemStatsMessage.prototype.addOptionalDisksData=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,15,opt_value,proto.inorbit.DiskUsageMessage,opt_index)};proto.inorbit.SystemStatsMessage.prototype.clearOptionalDisksDataList=function(){this.setOptionalDisksDataList([])};/**
 * repeated NetworkStatsMessage optional_network_interfaces_data = 16;
 * @return {!Array.<!proto.inorbit.NetworkStatsMessage>}
 */proto.inorbit.SystemStatsMessage.prototype.getOptionalNetworkInterfacesDataList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.NetworkStatsMessage,16)};/** @param {!Array.<!proto.inorbit.NetworkStatsMessage>} value */proto.inorbit.SystemStatsMessage.prototype.setOptionalNetworkInterfacesDataList=function(value){jspb.Message.setRepeatedWrapperField(this,16,value)};/**
 * @param {!proto.inorbit.NetworkStatsMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.NetworkStatsMessage}
 */proto.inorbit.SystemStatsMessage.prototype.addOptionalNetworkInterfacesData=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,16,opt_value,proto.inorbit.NetworkStatsMessage,opt_index)};proto.inorbit.SystemStatsMessage.prototype.clearOptionalNetworkInterfacesDataList=function(){this.setOptionalNetworkInterfacesDataList([])};/**
 * optional float ram_usage_percentage = 17;
 * @return {number}
 */proto.inorbit.SystemStatsMessage.prototype.getRamUsagePercentage=function(){return+jspb.Message.getFieldWithDefault(this,17,0)};/** @param {number} value */proto.inorbit.SystemStatsMessage.prototype.setRamUsagePercentage=function(value){jspb.Message.setProto3FloatField(this,17,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.OdometryDataMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.OdometryDataMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.OdometryDataMessage.displayName="proto.inorbit.OdometryDataMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.OdometryDataMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.OdometryDataMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.OdometryDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.OdometryDataMessage.toObject=function(includeInstance,msg){var f,obj={tsStart:jspb.Message.getFieldWithDefault(msg,1,0),ts:jspb.Message.getFieldWithDefault(msg,2,0),linearDistance:+jspb.Message.getFieldWithDefault(msg,3,0),angularDistance:+jspb.Message.getFieldWithDefault(msg,4,0),linearSpeed:+jspb.Message.getFieldWithDefault(msg,5,0),angularSpeed:+jspb.Message.getFieldWithDefault(msg,6,0),speedAvailable:jspb.Message.getFieldWithDefault(msg,7,false)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.OdometryDataMessage}
 */proto.inorbit.OdometryDataMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.OdometryDataMessage;return proto.inorbit.OdometryDataMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.OdometryDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.OdometryDataMessage}
 */proto.inorbit.OdometryDataMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTsStart(value);break;case 2:var value=reader.readInt64();msg.setTs(value);break;case 3:var value=reader.readFloat();msg.setLinearDistance(value);break;case 4:var value=reader.readFloat();msg.setAngularDistance(value);break;case 5:var value=reader.readFloat();msg.setLinearSpeed(value);break;case 6:var value=reader.readFloat();msg.setAngularSpeed(value);break;case 7:var value=reader.readBool();msg.setSpeedAvailable(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.OdometryDataMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.OdometryDataMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.OdometryDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.OdometryDataMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTsStart();if(f!==0){writer.writeInt64(1,f)}f=message.getTs();if(f!==0){writer.writeInt64(2,f)}f=message.getLinearDistance();if(f!==0){writer.writeFloat(3,f)}f=message.getAngularDistance();if(f!==0){writer.writeFloat(4,f)}f=message.getLinearSpeed();if(f!==0){writer.writeFloat(5,f)}f=message.getAngularSpeed();if(f!==0){writer.writeFloat(6,f)}f=message.getSpeedAvailable();if(f){writer.writeBool(7,f)}};/**
 * optional int64 ts_start = 1;
 * @return {number}
 */proto.inorbit.OdometryDataMessage.prototype.getTsStart=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.OdometryDataMessage.prototype.setTsStart=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional int64 ts = 2;
 * @return {number}
 */proto.inorbit.OdometryDataMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.OdometryDataMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional float linear_distance = 3;
 * @return {number}
 */proto.inorbit.OdometryDataMessage.prototype.getLinearDistance=function(){return+jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.OdometryDataMessage.prototype.setLinearDistance=function(value){jspb.Message.setProto3FloatField(this,3,value)};/**
 * optional float angular_distance = 4;
 * @return {number}
 */proto.inorbit.OdometryDataMessage.prototype.getAngularDistance=function(){return+jspb.Message.getFieldWithDefault(this,4,0)};/** @param {number} value */proto.inorbit.OdometryDataMessage.prototype.setAngularDistance=function(value){jspb.Message.setProto3FloatField(this,4,value)};/**
 * optional float linear_speed = 5;
 * @return {number}
 */proto.inorbit.OdometryDataMessage.prototype.getLinearSpeed=function(){return+jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.OdometryDataMessage.prototype.setLinearSpeed=function(value){jspb.Message.setProto3FloatField(this,5,value)};/**
 * optional float angular_speed = 6;
 * @return {number}
 */proto.inorbit.OdometryDataMessage.prototype.getAngularSpeed=function(){return+jspb.Message.getFieldWithDefault(this,6,0)};/** @param {number} value */proto.inorbit.OdometryDataMessage.prototype.setAngularSpeed=function(value){jspb.Message.setProto3FloatField(this,6,value)};/**
 * optional bool speed_available = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.OdometryDataMessage.prototype.getSpeedAvailable=function(){return jspb.Message.getFieldWithDefault(this,7,false)};/** @param {boolean} value */proto.inorbit.OdometryDataMessage.prototype.setSpeedAvailable=function(value){jspb.Message.setProto3BooleanField(this,7,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.PathPoint=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.PathPoint,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.PathPoint.displayName="proto.inorbit.PathPoint"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.PathPoint.prototype.toObject=function(opt_includeInstance){return proto.inorbit.PathPoint.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.PathPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PathPoint.toObject=function(includeInstance,msg){var f,obj={x:+jspb.Message.getFieldWithDefault(msg,1,0),y:+jspb.Message.getFieldWithDefault(msg,2,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.PathPoint}
 */proto.inorbit.PathPoint.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.PathPoint;return proto.inorbit.PathPoint.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.PathPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.PathPoint}
 */proto.inorbit.PathPoint.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readFloat();msg.setX(value);break;case 2:var value=reader.readFloat();msg.setY(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.PathPoint.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.PathPoint.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.PathPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PathPoint.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getX();if(f!==0){writer.writeFloat(1,f)}f=message.getY();if(f!==0){writer.writeFloat(2,f)}};/**
 * optional float x = 1;
 * @return {number}
 */proto.inorbit.PathPoint.prototype.getX=function(){return+jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.PathPoint.prototype.setX=function(value){jspb.Message.setProto3FloatField(this,1,value)};/**
 * optional float y = 2;
 * @return {number}
 */proto.inorbit.PathPoint.prototype.getY=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.PathPoint.prototype.setY=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RobotPath=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.RobotPath.repeatedFields_,null)};goog.inherits(proto.inorbit.RobotPath,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RobotPath.displayName="proto.inorbit.RobotPath"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.RobotPath.repeatedFields_=[1];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RobotPath.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RobotPath.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RobotPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RobotPath.toObject=function(includeInstance,msg){var f,obj={pointsList:jspb.Message.toObjectList(msg.getPointsList(),proto.inorbit.PathPoint.toObject,includeInstance),ts:jspb.Message.getFieldWithDefault(msg,2,0),pathId:jspb.Message.getFieldWithDefault(msg,3,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RobotPath}
 */proto.inorbit.RobotPath.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RobotPath;return proto.inorbit.RobotPath.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RobotPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RobotPath}
 */proto.inorbit.RobotPath.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.inorbit.PathPoint;reader.readMessage(value,proto.inorbit.PathPoint.deserializeBinaryFromReader);msg.addPoints(value);break;case 2:var value=reader.readInt64();msg.setTs(value);break;case 3:var value=reader.readString();msg.setPathId(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RobotPath.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RobotPath.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RobotPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RobotPath.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getPointsList();if(f.length>0){writer.writeRepeatedMessage(1,f,proto.inorbit.PathPoint.serializeBinaryToWriter)}f=message.getTs();if(f!==0){writer.writeInt64(2,f)}f=message.getPathId();if(f.length>0){writer.writeString(3,f)}};/**
 * repeated PathPoint points = 1;
 * @return {!Array.<!proto.inorbit.PathPoint>}
 */proto.inorbit.RobotPath.prototype.getPointsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.PathPoint,1)};/** @param {!Array.<!proto.inorbit.PathPoint>} value */proto.inorbit.RobotPath.prototype.setPointsList=function(value){jspb.Message.setRepeatedWrapperField(this,1,value)};/**
 * @param {!proto.inorbit.PathPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.PathPoint}
 */proto.inorbit.RobotPath.prototype.addPoints=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,1,opt_value,proto.inorbit.PathPoint,opt_index)};proto.inorbit.RobotPath.prototype.clearPointsList=function(){this.setPointsList([])};/**
 * optional int64 ts = 2;
 * @return {number}
 */proto.inorbit.RobotPath.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.RobotPath.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional string path_id = 3;
 * @return {string}
 */proto.inorbit.RobotPath.prototype.getPathId=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/** @param {string} value */proto.inorbit.RobotPath.prototype.setPathId=function(value){jspb.Message.setProto3StringField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.PathDataMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.PathDataMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.PathDataMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.PathDataMessage.displayName="proto.inorbit.PathDataMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.PathDataMessage.repeatedFields_=[1,3];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.PathDataMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.PathDataMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.PathDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PathDataMessage.toObject=function(includeInstance,msg){var f,obj={pointsList:jspb.Message.toObjectList(msg.getPointsList(),proto.inorbit.PathPoint.toObject,includeInstance),ts:jspb.Message.getFieldWithDefault(msg,2,0),pathsList:jspb.Message.toObjectList(msg.getPathsList(),proto.inorbit.RobotPath.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.PathDataMessage}
 */proto.inorbit.PathDataMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.PathDataMessage;return proto.inorbit.PathDataMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.PathDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.PathDataMessage}
 */proto.inorbit.PathDataMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.inorbit.PathPoint;reader.readMessage(value,proto.inorbit.PathPoint.deserializeBinaryFromReader);msg.addPoints(value);break;case 2:var value=reader.readInt64();msg.setTs(value);break;case 3:var value=new proto.inorbit.RobotPath;reader.readMessage(value,proto.inorbit.RobotPath.deserializeBinaryFromReader);msg.addPaths(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.PathDataMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.PathDataMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.PathDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PathDataMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getPointsList();if(f.length>0){writer.writeRepeatedMessage(1,f,proto.inorbit.PathPoint.serializeBinaryToWriter)}f=message.getTs();if(f!==0){writer.writeInt64(2,f)}f=message.getPathsList();if(f.length>0){writer.writeRepeatedMessage(3,f,proto.inorbit.RobotPath.serializeBinaryToWriter)}};/**
 * repeated PathPoint points = 1;
 * @return {!Array.<!proto.inorbit.PathPoint>}
 */proto.inorbit.PathDataMessage.prototype.getPointsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.PathPoint,1)};/** @param {!Array.<!proto.inorbit.PathPoint>} value */proto.inorbit.PathDataMessage.prototype.setPointsList=function(value){jspb.Message.setRepeatedWrapperField(this,1,value)};/**
 * @param {!proto.inorbit.PathPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.PathPoint}
 */proto.inorbit.PathDataMessage.prototype.addPoints=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,1,opt_value,proto.inorbit.PathPoint,opt_index)};proto.inorbit.PathDataMessage.prototype.clearPointsList=function(){this.setPointsList([])};/**
 * optional int64 ts = 2;
 * @return {number}
 */proto.inorbit.PathDataMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.PathDataMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * repeated RobotPath paths = 3;
 * @return {!Array.<!proto.inorbit.RobotPath>}
 */proto.inorbit.PathDataMessage.prototype.getPathsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.RobotPath,3)};/** @param {!Array.<!proto.inorbit.RobotPath>} value */proto.inorbit.PathDataMessage.prototype.setPathsList=function(value){jspb.Message.setRepeatedWrapperField(this,3,value)};/**
 * @param {!proto.inorbit.RobotPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.RobotPath}
 */proto.inorbit.PathDataMessage.prototype.addPaths=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,3,opt_value,proto.inorbit.RobotPath,opt_index)};proto.inorbit.PathDataMessage.prototype.clearPathsList=function(){this.setPathsList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.MapMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.MapMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.MapMessage.displayName="proto.inorbit.MapMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.MapMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.MapMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.MapMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.MapMessage.toObject=function(includeInstance,msg){var f,obj={width:jspb.Message.getFieldWithDefault(msg,1,0),height:jspb.Message.getFieldWithDefault(msg,2,0),pixels:msg.getPixels_asB64(),x:+jspb.Message.getFieldWithDefault(msg,4,0),y:+jspb.Message.getFieldWithDefault(msg,5,0),theta:+jspb.Message.getFieldWithDefault(msg,6,0),resolution:+jspb.Message.getFieldWithDefault(msg,7,0),ts:jspb.Message.getFieldWithDefault(msg,8,0),label:jspb.Message.getFieldWithDefault(msg,9,""),dataHash:jspb.Message.getFieldWithDefault(msg,10,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.MapMessage}
 */proto.inorbit.MapMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.MapMessage;return proto.inorbit.MapMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.MapMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.MapMessage}
 */proto.inorbit.MapMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readUint32();msg.setWidth(value);break;case 2:var value=reader.readUint32();msg.setHeight(value);break;case 3:var value=reader.readBytes();msg.setPixels(value);break;case 4:var value=reader.readFloat();msg.setX(value);break;case 5:var value=reader.readFloat();msg.setY(value);break;case 6:var value=reader.readFloat();msg.setTheta(value);break;case 7:var value=reader.readFloat();msg.setResolution(value);break;case 8:var value=reader.readInt64();msg.setTs(value);break;case 9:var value=reader.readString();msg.setLabel(value);break;case 10:var value=reader.readInt64();msg.setDataHash(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.MapMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.MapMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.MapMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.MapMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getWidth();if(f!==0){writer.writeUint32(1,f)}f=message.getHeight();if(f!==0){writer.writeUint32(2,f)}f=message.getPixels_asU8();if(f.length>0){writer.writeBytes(3,f)}f=message.getX();if(f!==0){writer.writeFloat(4,f)}f=message.getY();if(f!==0){writer.writeFloat(5,f)}f=message.getTheta();if(f!==0){writer.writeFloat(6,f)}f=message.getResolution();if(f!==0){writer.writeFloat(7,f)}f=message.getTs();if(f!==0){writer.writeInt64(8,f)}f=message.getLabel();if(f.length>0){writer.writeString(9,f)}f=message.getDataHash();if(f!==0){writer.writeInt64(10,f)}};/**
 * optional uint32 width = 1;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getWidth=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setWidth=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional uint32 height = 2;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getHeight=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setHeight=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional bytes pixels = 3;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.MapMessage.prototype.getPixels=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/**
 * optional bytes pixels = 3;
 * This is a type-conversion wrapper around `getPixels()`
 * @return {string}
 */proto.inorbit.MapMessage.prototype.getPixels_asB64=function(){return jspb.Message.bytesAsB64(this.getPixels())};/**
 * optional bytes pixels = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPixels()`
 * @return {!Uint8Array}
 */proto.inorbit.MapMessage.prototype.getPixels_asU8=function(){return jspb.Message.bytesAsU8(this.getPixels())};/** @param {!(string|Uint8Array)} value */proto.inorbit.MapMessage.prototype.setPixels=function(value){jspb.Message.setProto3BytesField(this,3,value)};/**
 * optional float x = 4;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getX=function(){return+jspb.Message.getFieldWithDefault(this,4,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setX=function(value){jspb.Message.setProto3FloatField(this,4,value)};/**
 * optional float y = 5;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getY=function(){return+jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setY=function(value){jspb.Message.setProto3FloatField(this,5,value)};/**
 * optional float theta = 6;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getTheta=function(){return+jspb.Message.getFieldWithDefault(this,6,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setTheta=function(value){jspb.Message.setProto3FloatField(this,6,value)};/**
 * optional float resolution = 7;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getResolution=function(){return+jspb.Message.getFieldWithDefault(this,7,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setResolution=function(value){jspb.Message.setProto3FloatField(this,7,value)};/**
 * optional int64 ts = 8;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,8,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,8,value)};/**
 * optional string label = 9;
 * @return {string}
 */proto.inorbit.MapMessage.prototype.getLabel=function(){return jspb.Message.getFieldWithDefault(this,9,"")};/** @param {string} value */proto.inorbit.MapMessage.prototype.setLabel=function(value){jspb.Message.setProto3StringField(this,9,value)};/**
 * optional int64 data_hash = 10;
 * @return {number}
 */proto.inorbit.MapMessage.prototype.getDataHash=function(){return jspb.Message.getFieldWithDefault(this,10,0)};/** @param {number} value */proto.inorbit.MapMessage.prototype.setDataHash=function(value){jspb.Message.setProto3IntField(this,10,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.MapRequest=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.MapRequest,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.MapRequest.displayName="proto.inorbit.MapRequest"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.MapRequest.prototype.toObject=function(opt_includeInstance){return proto.inorbit.MapRequest.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.MapRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.MapRequest.toObject=function(includeInstance,msg){var f,obj={label:jspb.Message.getFieldWithDefault(msg,9,""),dataHash:jspb.Message.getFieldWithDefault(msg,10,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.MapRequest}
 */proto.inorbit.MapRequest.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.MapRequest;return proto.inorbit.MapRequest.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.MapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.MapRequest}
 */proto.inorbit.MapRequest.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 9:var value=reader.readString();msg.setLabel(value);break;case 10:var value=reader.readInt64();msg.setDataHash(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.MapRequest.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.MapRequest.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.MapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.MapRequest.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getLabel();if(f.length>0){writer.writeString(9,f)}f=message.getDataHash();if(f!==0){writer.writeInt64(10,f)}};/**
 * optional string label = 9;
 * @return {string}
 */proto.inorbit.MapRequest.prototype.getLabel=function(){return jspb.Message.getFieldWithDefault(this,9,"")};/** @param {string} value */proto.inorbit.MapRequest.prototype.setLabel=function(value){jspb.Message.setProto3StringField(this,9,value)};/**
 * optional int64 data_hash = 10;
 * @return {number}
 */proto.inorbit.MapRequest.prototype.getDataHash=function(){return jspb.Message.getFieldWithDefault(this,10,0)};/** @param {number} value */proto.inorbit.MapRequest.prototype.setDataHash=function(value){jspb.Message.setProto3IntField(this,10,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.Nav2DWaypointMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.Nav2DWaypointMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.Nav2DWaypointMessage.displayName="proto.inorbit.Nav2DWaypointMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.Nav2DWaypointMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.Nav2DWaypointMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.Nav2DWaypointMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.Nav2DWaypointMessage.toObject=function(includeInstance,msg){var f,obj={frame:jspb.Message.getFieldWithDefault(msg,1,0),x:+jspb.Message.getFieldWithDefault(msg,2,0),y:+jspb.Message.getFieldWithDefault(msg,3,0),theta:+jspb.Message.getFieldWithDefault(msg,4,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.Nav2DWaypointMessage}
 */proto.inorbit.Nav2DWaypointMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.Nav2DWaypointMessage;return proto.inorbit.Nav2DWaypointMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.Nav2DWaypointMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.Nav2DWaypointMessage}
 */proto.inorbit.Nav2DWaypointMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readEnum();msg.setFrame(value);break;case 2:var value=reader.readFloat();msg.setX(value);break;case 3:var value=reader.readFloat();msg.setY(value);break;case 4:var value=reader.readFloat();msg.setTheta(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.Nav2DWaypointMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.Nav2DWaypointMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.Nav2DWaypointMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.Nav2DWaypointMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getFrame();if(f!==0){writer.writeEnum(1,f)}f=message.getX();if(f!==0){writer.writeFloat(2,f)}f=message.getY();if(f!==0){writer.writeFloat(3,f)}f=message.getTheta();if(f!==0){writer.writeFloat(4,f)}};/**
 * optional Nav2DWaypointFrame frame = 1;
 * @return {!proto.inorbit.Nav2DWaypointFrame}
 */proto.inorbit.Nav2DWaypointMessage.prototype.getFrame=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {!proto.inorbit.Nav2DWaypointFrame} value */proto.inorbit.Nav2DWaypointMessage.prototype.setFrame=function(value){jspb.Message.setProto3EnumField(this,1,value)};/**
 * optional float x = 2;
 * @return {number}
 */proto.inorbit.Nav2DWaypointMessage.prototype.getX=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.Nav2DWaypointMessage.prototype.setX=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * optional float y = 3;
 * @return {number}
 */proto.inorbit.Nav2DWaypointMessage.prototype.getY=function(){return+jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.Nav2DWaypointMessage.prototype.setY=function(value){jspb.Message.setProto3FloatField(this,3,value)};/**
 * optional float theta = 4;
 * @return {number}
 */proto.inorbit.Nav2DWaypointMessage.prototype.getTheta=function(){return+jspb.Message.getFieldWithDefault(this,4,0)};/** @param {number} value */proto.inorbit.Nav2DWaypointMessage.prototype.setTheta=function(value){jspb.Message.setProto3FloatField(this,4,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.Nav2DPathMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.Nav2DPathMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.Nav2DPathMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.Nav2DPathMessage.displayName="proto.inorbit.Nav2DPathMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.Nav2DPathMessage.repeatedFields_=[3];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.Nav2DPathMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.Nav2DPathMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.Nav2DPathMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.Nav2DPathMessage.toObject=function(includeInstance,msg){var f,obj={frame:jspb.Message.getFieldWithDefault(msg,1,0),tsHint:jspb.Message.getFieldWithDefault(msg,2,0),waypointsList:jspb.Message.toObjectList(msg.getWaypointsList(),proto.inorbit.Nav2DWaypointMessage.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.Nav2DPathMessage}
 */proto.inorbit.Nav2DPathMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.Nav2DPathMessage;return proto.inorbit.Nav2DPathMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.Nav2DPathMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.Nav2DPathMessage}
 */proto.inorbit.Nav2DPathMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readEnum();msg.setFrame(value);break;case 2:var value=reader.readInt64();msg.setTsHint(value);break;case 3:var value=new proto.inorbit.Nav2DWaypointMessage;reader.readMessage(value,proto.inorbit.Nav2DWaypointMessage.deserializeBinaryFromReader);msg.addWaypoints(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.Nav2DPathMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.Nav2DPathMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.Nav2DPathMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.Nav2DPathMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getFrame();if(f!==0){writer.writeEnum(1,f)}f=message.getTsHint();if(f!==0){writer.writeInt64(2,f)}f=message.getWaypointsList();if(f.length>0){writer.writeRepeatedMessage(3,f,proto.inorbit.Nav2DWaypointMessage.serializeBinaryToWriter)}};/**
 * optional Nav2DWaypointFrame frame = 1;
 * @return {!proto.inorbit.Nav2DWaypointFrame}
 */proto.inorbit.Nav2DPathMessage.prototype.getFrame=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {!proto.inorbit.Nav2DWaypointFrame} value */proto.inorbit.Nav2DPathMessage.prototype.setFrame=function(value){jspb.Message.setProto3EnumField(this,1,value)};/**
 * optional int64 ts_hint = 2;
 * @return {number}
 */proto.inorbit.Nav2DPathMessage.prototype.getTsHint=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.Nav2DPathMessage.prototype.setTsHint=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * repeated Nav2DWaypointMessage waypoints = 3;
 * @return {!Array.<!proto.inorbit.Nav2DWaypointMessage>}
 */proto.inorbit.Nav2DPathMessage.prototype.getWaypointsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.Nav2DWaypointMessage,3)};/** @param {!Array.<!proto.inorbit.Nav2DWaypointMessage>} value */proto.inorbit.Nav2DPathMessage.prototype.setWaypointsList=function(value){jspb.Message.setRepeatedWrapperField(this,3,value)};/**
 * @param {!proto.inorbit.Nav2DWaypointMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.Nav2DWaypointMessage}
 */proto.inorbit.Nav2DPathMessage.prototype.addWaypoints=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,3,opt_value,proto.inorbit.Nav2DWaypointMessage,opt_index)};proto.inorbit.Nav2DPathMessage.prototype.clearWaypointsList=function(){this.setWaypointsList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.AlertMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.AlertMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.AlertMessage.displayName="proto.inorbit.AlertMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.AlertMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.AlertMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.AlertMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.AlertMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),componentId:jspb.Message.getFieldWithDefault(msg,2,""),status:jspb.Message.getFieldWithDefault(msg,3,""),level:jspb.Message.getFieldWithDefault(msg,4,""),name:jspb.Message.getFieldWithDefault(msg,5,""),message:jspb.Message.getFieldWithDefault(msg,6,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.AlertMessage}
 */proto.inorbit.AlertMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.AlertMessage;return proto.inorbit.AlertMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.AlertMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.AlertMessage}
 */proto.inorbit.AlertMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readString();msg.setComponentId(value);break;case 3:var value=reader.readString();msg.setStatus(value);break;case 4:var value=reader.readString();msg.setLevel(value);break;case 5:var value=reader.readString();msg.setName(value);break;case 6:var value=reader.readString();msg.setMessage(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.AlertMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.AlertMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.AlertMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.AlertMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getComponentId();if(f.length>0){writer.writeString(2,f)}f=message.getStatus();if(f.length>0){writer.writeString(3,f)}f=message.getLevel();if(f.length>0){writer.writeString(4,f)}f=message.getName();if(f.length>0){writer.writeString(5,f)}f=message.getMessage();if(f.length>0){writer.writeString(6,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.AlertMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.AlertMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional string component_id = 2;
 * @return {string}
 */proto.inorbit.AlertMessage.prototype.getComponentId=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.AlertMessage.prototype.setComponentId=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * optional string status = 3;
 * @return {string}
 */proto.inorbit.AlertMessage.prototype.getStatus=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/** @param {string} value */proto.inorbit.AlertMessage.prototype.setStatus=function(value){jspb.Message.setProto3StringField(this,3,value)};/**
 * optional string level = 4;
 * @return {string}
 */proto.inorbit.AlertMessage.prototype.getLevel=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.AlertMessage.prototype.setLevel=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional string name = 5;
 * @return {string}
 */proto.inorbit.AlertMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,5,"")};/** @param {string} value */proto.inorbit.AlertMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,5,value)};/**
 * optional string message = 6;
 * @return {string}
 */proto.inorbit.AlertMessage.prototype.getMessage=function(){return jspb.Message.getFieldWithDefault(this,6,"")};/** @param {string} value */proto.inorbit.AlertMessage.prototype.setMessage=function(value){jspb.Message.setProto3StringField(this,6,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.Echo=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,proto.inorbit.Echo.oneofGroups_)};goog.inherits(proto.inorbit.Echo,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.Echo.displayName="proto.inorbit.Echo"}/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */proto.inorbit.Echo.oneofGroups_=[[3,4]];/**
 * @enum {number}
 */proto.inorbit.Echo.PayloadCase={PAYLOAD_NOT_SET:0,STRING_PAYLOAD:3,BYTE_PAYLOAD:4};/**
 * @return {proto.inorbit.Echo.PayloadCase}
 */proto.inorbit.Echo.prototype.getPayloadCase=function(){return jspb.Message.computeOneofCase(this,proto.inorbit.Echo.oneofGroups_[0])};if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.Echo.prototype.toObject=function(opt_includeInstance){return proto.inorbit.Echo.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.Echo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.Echo.toObject=function(includeInstance,msg){var f,obj={timeStamp:jspb.Message.getFieldWithDefault(msg,1,0),topic:jspb.Message.getFieldWithDefault(msg,2,""),stringPayload:jspb.Message.getFieldWithDefault(msg,3,""),bytePayload:msg.getBytePayload_asB64()};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.Echo}
 */proto.inorbit.Echo.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.Echo;return proto.inorbit.Echo.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.Echo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.Echo}
 */proto.inorbit.Echo.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTimeStamp(value);break;case 2:var value=reader.readString();msg.setTopic(value);break;case 3:var value=reader.readString();msg.setStringPayload(value);break;case 4:var value=reader.readBytes();msg.setBytePayload(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.Echo.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.Echo.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.Echo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.Echo.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTimeStamp();if(f!==0){writer.writeInt64(1,f)}f=message.getTopic();if(f.length>0){writer.writeString(2,f)}f=jspb.Message.getField(message,3);if(f!=null){writer.writeString(3,f)}f=jspb.Message.getField(message,4);if(f!=null){writer.writeBytes(4,f)}};/**
 * optional int64 time_stamp = 1;
 * @return {number}
 */proto.inorbit.Echo.prototype.getTimeStamp=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.Echo.prototype.setTimeStamp=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional string topic = 2;
 * @return {string}
 */proto.inorbit.Echo.prototype.getTopic=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.Echo.prototype.setTopic=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * optional string string_payload = 3;
 * @return {string}
 */proto.inorbit.Echo.prototype.getStringPayload=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/** @param {string} value */proto.inorbit.Echo.prototype.setStringPayload=function(value){jspb.Message.setOneofField(this,3,proto.inorbit.Echo.oneofGroups_[0],value)};proto.inorbit.Echo.prototype.clearStringPayload=function(){jspb.Message.setOneofField(this,3,proto.inorbit.Echo.oneofGroups_[0],undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.Echo.prototype.hasStringPayload=function(){return jspb.Message.getField(this,3)!=null};/**
 * optional bytes byte_payload = 4;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.Echo.prototype.getBytePayload=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/**
 * optional bytes byte_payload = 4;
 * This is a type-conversion wrapper around `getBytePayload()`
 * @return {string}
 */proto.inorbit.Echo.prototype.getBytePayload_asB64=function(){return jspb.Message.bytesAsB64(this.getBytePayload())};/**
 * optional bytes byte_payload = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytePayload()`
 * @return {!Uint8Array}
 */proto.inorbit.Echo.prototype.getBytePayload_asU8=function(){return jspb.Message.bytesAsU8(this.getBytePayload())};/** @param {!(string|Uint8Array)} value */proto.inorbit.Echo.prototype.setBytePayload=function(value){jspb.Message.setOneofField(this,4,proto.inorbit.Echo.oneofGroups_[0],value)};proto.inorbit.Echo.prototype.clearBytePayload=function(){jspb.Message.setOneofField(this,4,proto.inorbit.Echo.oneofGroups_[0],undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.Echo.prototype.hasBytePayload=function(){return jspb.Message.getField(this,4)!=null};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.DatabagUpdateMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.DatabagUpdateMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.DatabagUpdateMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.DatabagUpdateMessage.displayName="proto.inorbit.DatabagUpdateMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.DatabagUpdateMessage.repeatedFields_=[9];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.DatabagUpdateMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.DatabagUpdateMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.DatabagUpdateMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.DatabagUpdateMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),storedInRobot:jspb.Message.getFieldWithDefault(msg,2,false),uploadingToCloud:jspb.Message.getFieldWithDefault(msg,3,false),url:jspb.Message.getFieldWithDefault(msg,4,""),startTs:jspb.Message.getFieldWithDefault(msg,5,0),endTs:jspb.Message.getFieldWithDefault(msg,6,0),sizeKb:jspb.Message.getFieldWithDefault(msg,7,0),topicsList:jspb.Message.getRepeatedField(msg,9),propertiesMap:(f=msg.getPropertiesMap())?f.toObject(includeInstance,undefined):[]};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.DatabagUpdateMessage}
 */proto.inorbit.DatabagUpdateMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.DatabagUpdateMessage;return proto.inorbit.DatabagUpdateMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.DatabagUpdateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.DatabagUpdateMessage}
 */proto.inorbit.DatabagUpdateMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readBool();msg.setStoredInRobot(value);break;case 3:var value=reader.readBool();msg.setUploadingToCloud(value);break;case 4:var value=reader.readString();msg.setUrl(value);break;case 5:var value=reader.readInt64();msg.setStartTs(value);break;case 6:var value=reader.readInt64();msg.setEndTs(value);break;case 7:var value=reader.readInt32();msg.setSizeKb(value);break;case 9:var value=reader.readString();msg.addTopics(value);break;case 8:var value=msg.getPropertiesMap();reader.readMessage(value,function(message,reader){jspb.Map.deserializeBinary(message,reader,jspb.BinaryReader.prototype.readString,jspb.BinaryReader.prototype.readString)});break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.DatabagUpdateMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.DatabagUpdateMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.DatabagUpdateMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.DatabagUpdateMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getStoredInRobot();if(f){writer.writeBool(2,f)}f=message.getUploadingToCloud();if(f){writer.writeBool(3,f)}f=message.getUrl();if(f.length>0){writer.writeString(4,f)}f=message.getStartTs();if(f!==0){writer.writeInt64(5,f)}f=message.getEndTs();if(f!==0){writer.writeInt64(6,f)}f=message.getSizeKb();if(f!==0){writer.writeInt32(7,f)}f=message.getTopicsList();if(f.length>0){writer.writeRepeatedString(9,f)}f=message.getPropertiesMap(true);if(f&&f.getLength()>0){f.serializeBinary(8,writer,jspb.BinaryWriter.prototype.writeString,jspb.BinaryWriter.prototype.writeString)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.DatabagUpdateMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.DatabagUpdateMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional bool stored_in_robot = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.DatabagUpdateMessage.prototype.getStoredInRobot=function(){return jspb.Message.getFieldWithDefault(this,2,false)};/** @param {boolean} value */proto.inorbit.DatabagUpdateMessage.prototype.setStoredInRobot=function(value){jspb.Message.setProto3BooleanField(this,2,value)};/**
 * optional bool uploading_to_cloud = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.DatabagUpdateMessage.prototype.getUploadingToCloud=function(){return jspb.Message.getFieldWithDefault(this,3,false)};/** @param {boolean} value */proto.inorbit.DatabagUpdateMessage.prototype.setUploadingToCloud=function(value){jspb.Message.setProto3BooleanField(this,3,value)};/**
 * optional string url = 4;
 * @return {string}
 */proto.inorbit.DatabagUpdateMessage.prototype.getUrl=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.DatabagUpdateMessage.prototype.setUrl=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional int64 start_ts = 5;
 * @return {number}
 */proto.inorbit.DatabagUpdateMessage.prototype.getStartTs=function(){return jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.DatabagUpdateMessage.prototype.setStartTs=function(value){jspb.Message.setProto3IntField(this,5,value)};/**
 * optional int64 end_ts = 6;
 * @return {number}
 */proto.inorbit.DatabagUpdateMessage.prototype.getEndTs=function(){return jspb.Message.getFieldWithDefault(this,6,0)};/** @param {number} value */proto.inorbit.DatabagUpdateMessage.prototype.setEndTs=function(value){jspb.Message.setProto3IntField(this,6,value)};/**
 * optional int32 size_kb = 7;
 * @return {number}
 */proto.inorbit.DatabagUpdateMessage.prototype.getSizeKb=function(){return jspb.Message.getFieldWithDefault(this,7,0)};/** @param {number} value */proto.inorbit.DatabagUpdateMessage.prototype.setSizeKb=function(value){jspb.Message.setProto3IntField(this,7,value)};/**
 * repeated string topics = 9;
 * @return {!Array.<string>}
 */proto.inorbit.DatabagUpdateMessage.prototype.getTopicsList=function(){return jspb.Message.getRepeatedField(this,9)};/** @param {!Array.<string>} value */proto.inorbit.DatabagUpdateMessage.prototype.setTopicsList=function(value){jspb.Message.setField(this,9,value||[])};/**
 * @param {!string} value
 * @param {number=} opt_index
 */proto.inorbit.DatabagUpdateMessage.prototype.addTopics=function(value,opt_index){jspb.Message.addToRepeatedField(this,9,value,opt_index)};proto.inorbit.DatabagUpdateMessage.prototype.clearTopicsList=function(){this.setTopicsList([])};/**
 * map<string, string> properties = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */proto.inorbit.DatabagUpdateMessage.prototype.getPropertiesMap=function(opt_noLazyCreate){return jspb.Message.getMapField(this,8,opt_noLazyCreate,null)};proto.inorbit.DatabagUpdateMessage.prototype.clearPropertiesMap=function(){this.getPropertiesMap().clear()};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RosbagUpdateMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.RosbagUpdateMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.RosbagUpdateMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RosbagUpdateMessage.displayName="proto.inorbit.RosbagUpdateMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.RosbagUpdateMessage.repeatedFields_=[9];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RosbagUpdateMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RosbagUpdateMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RosbagUpdateMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosbagUpdateMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),storedInRobot:jspb.Message.getFieldWithDefault(msg,2,false),uploadingToCloud:jspb.Message.getFieldWithDefault(msg,3,false),url:jspb.Message.getFieldWithDefault(msg,4,""),ts:jspb.Message.getFieldWithDefault(msg,5,0),startTs:jspb.Message.getFieldWithDefault(msg,6,0),endTs:jspb.Message.getFieldWithDefault(msg,7,0),sizeKb:jspb.Message.getFieldWithDefault(msg,8,0),topicsList:jspb.Message.getRepeatedField(msg,9),propertiesMap:(f=msg.getPropertiesMap())?f.toObject(includeInstance,undefined):[]};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RosbagUpdateMessage}
 */proto.inorbit.RosbagUpdateMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RosbagUpdateMessage;return proto.inorbit.RosbagUpdateMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RosbagUpdateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RosbagUpdateMessage}
 */proto.inorbit.RosbagUpdateMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readBool();msg.setStoredInRobot(value);break;case 3:var value=reader.readBool();msg.setUploadingToCloud(value);break;case 4:var value=reader.readString();msg.setUrl(value);break;case 5:var value=reader.readInt64();msg.setTs(value);break;case 6:var value=reader.readInt64();msg.setStartTs(value);break;case 7:var value=reader.readInt64();msg.setEndTs(value);break;case 8:var value=reader.readInt32();msg.setSizeKb(value);break;case 9:var value=reader.readString();msg.addTopics(value);break;case 10:var value=msg.getPropertiesMap();reader.readMessage(value,function(message,reader){jspb.Map.deserializeBinary(message,reader,jspb.BinaryReader.prototype.readString,jspb.BinaryReader.prototype.readString)});break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RosbagUpdateMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RosbagUpdateMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RosbagUpdateMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosbagUpdateMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getStoredInRobot();if(f){writer.writeBool(2,f)}f=message.getUploadingToCloud();if(f){writer.writeBool(3,f)}f=message.getUrl();if(f.length>0){writer.writeString(4,f)}f=message.getTs();if(f!==0){writer.writeInt64(5,f)}f=message.getStartTs();if(f!==0){writer.writeInt64(6,f)}f=message.getEndTs();if(f!==0){writer.writeInt64(7,f)}f=message.getSizeKb();if(f!==0){writer.writeInt32(8,f)}f=message.getTopicsList();if(f.length>0){writer.writeRepeatedString(9,f)}f=message.getPropertiesMap(true);if(f&&f.getLength()>0){f.serializeBinary(10,writer,jspb.BinaryWriter.prototype.writeString,jspb.BinaryWriter.prototype.writeString)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.RosbagUpdateMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.RosbagUpdateMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional bool stored_in_robot = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RosbagUpdateMessage.prototype.getStoredInRobot=function(){return jspb.Message.getFieldWithDefault(this,2,false)};/** @param {boolean} value */proto.inorbit.RosbagUpdateMessage.prototype.setStoredInRobot=function(value){jspb.Message.setProto3BooleanField(this,2,value)};/**
 * optional bool uploading_to_cloud = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RosbagUpdateMessage.prototype.getUploadingToCloud=function(){return jspb.Message.getFieldWithDefault(this,3,false)};/** @param {boolean} value */proto.inorbit.RosbagUpdateMessage.prototype.setUploadingToCloud=function(value){jspb.Message.setProto3BooleanField(this,3,value)};/**
 * optional string url = 4;
 * @return {string}
 */proto.inorbit.RosbagUpdateMessage.prototype.getUrl=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.RosbagUpdateMessage.prototype.setUrl=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional int64 ts = 5;
 * @return {number}
 */proto.inorbit.RosbagUpdateMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.RosbagUpdateMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,5,value)};/**
 * optional int64 start_ts = 6;
 * @return {number}
 */proto.inorbit.RosbagUpdateMessage.prototype.getStartTs=function(){return jspb.Message.getFieldWithDefault(this,6,0)};/** @param {number} value */proto.inorbit.RosbagUpdateMessage.prototype.setStartTs=function(value){jspb.Message.setProto3IntField(this,6,value)};/**
 * optional int64 end_ts = 7;
 * @return {number}
 */proto.inorbit.RosbagUpdateMessage.prototype.getEndTs=function(){return jspb.Message.getFieldWithDefault(this,7,0)};/** @param {number} value */proto.inorbit.RosbagUpdateMessage.prototype.setEndTs=function(value){jspb.Message.setProto3IntField(this,7,value)};/**
 * optional int32 size_kb = 8;
 * @return {number}
 */proto.inorbit.RosbagUpdateMessage.prototype.getSizeKb=function(){return jspb.Message.getFieldWithDefault(this,8,0)};/** @param {number} value */proto.inorbit.RosbagUpdateMessage.prototype.setSizeKb=function(value){jspb.Message.setProto3IntField(this,8,value)};/**
 * repeated string topics = 9;
 * @return {!Array.<string>}
 */proto.inorbit.RosbagUpdateMessage.prototype.getTopicsList=function(){return jspb.Message.getRepeatedField(this,9)};/** @param {!Array.<string>} value */proto.inorbit.RosbagUpdateMessage.prototype.setTopicsList=function(value){jspb.Message.setField(this,9,value||[])};/**
 * @param {!string} value
 * @param {number=} opt_index
 */proto.inorbit.RosbagUpdateMessage.prototype.addTopics=function(value,opt_index){jspb.Message.addToRepeatedField(this,9,value,opt_index)};proto.inorbit.RosbagUpdateMessage.prototype.clearTopicsList=function(){this.setTopicsList([])};/**
 * map<string, string> properties = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */proto.inorbit.RosbagUpdateMessage.prototype.getPropertiesMap=function(opt_noLazyCreate){return jspb.Message.getMapField(this,10,opt_noLazyCreate,null)};proto.inorbit.RosbagUpdateMessage.prototype.clearPropertiesMap=function(){this.getPropertiesMap().clear()};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.LaserMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.LaserMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.LaserMessage.displayName="proto.inorbit.LaserMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.LaserMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.LaserMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.LaserMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.LaserMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),ranges:(f=msg.getRanges())&&proto.inorbit.FloatingPointList.toObject(includeInstance,f)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.LaserMessage}
 */proto.inorbit.LaserMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.LaserMessage;return proto.inorbit.LaserMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.LaserMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.LaserMessage}
 */proto.inorbit.LaserMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=new proto.inorbit.FloatingPointList;reader.readMessage(value,proto.inorbit.FloatingPointList.deserializeBinaryFromReader);msg.setRanges(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.LaserMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.LaserMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.LaserMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.LaserMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getRanges();if(f!=null){writer.writeMessage(2,f,proto.inorbit.FloatingPointList.serializeBinaryToWriter)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.LaserMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.LaserMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional FloatingPointList ranges = 2;
 * @return {?proto.inorbit.FloatingPointList}
 */proto.inorbit.LaserMessage.prototype.getRanges=function(){return jspb.Message.getWrapperField(this,proto.inorbit.FloatingPointList,2)};/** @param {?proto.inorbit.FloatingPointList|undefined} value */proto.inorbit.LaserMessage.prototype.setRanges=function(value){jspb.Message.setWrapperField(this,2,value)};proto.inorbit.LaserMessage.prototype.clearRanges=function(){this.setRanges(undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.LaserMessage.prototype.hasRanges=function(){return jspb.Message.getField(this,2)!=null};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.FloatingPointList=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.FloatingPointList.repeatedFields_,null)};goog.inherits(proto.inorbit.FloatingPointList,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.FloatingPointList.displayName="proto.inorbit.FloatingPointList"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.FloatingPointList.repeatedFields_=[1,2];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.FloatingPointList.prototype.toObject=function(opt_includeInstance){return proto.inorbit.FloatingPointList.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.FloatingPointList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.FloatingPointList.toObject=function(includeInstance,msg){var f,obj={runsList:jspb.Message.getRepeatedField(msg,1),valuesList:jspb.Message.getRepeatedFloatingPointField(msg,2)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.FloatingPointList}
 */proto.inorbit.FloatingPointList.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.FloatingPointList;return proto.inorbit.FloatingPointList.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.FloatingPointList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.FloatingPointList}
 */proto.inorbit.FloatingPointList.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readPackedUint32();msg.setRunsList(value);break;case 2:var value=reader.readPackedFloat();msg.setValuesList(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.FloatingPointList.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.FloatingPointList.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.FloatingPointList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.FloatingPointList.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getRunsList();if(f.length>0){writer.writePackedUint32(1,f)}f=message.getValuesList();if(f.length>0){writer.writePackedFloat(2,f)}};/**
 * repeated uint32 runs = 1;
 * @return {!Array.<number>}
 */proto.inorbit.FloatingPointList.prototype.getRunsList=function(){return jspb.Message.getRepeatedField(this,1)};/** @param {!Array.<number>} value */proto.inorbit.FloatingPointList.prototype.setRunsList=function(value){jspb.Message.setField(this,1,value||[])};/**
 * @param {!number} value
 * @param {number=} opt_index
 */proto.inorbit.FloatingPointList.prototype.addRuns=function(value,opt_index){jspb.Message.addToRepeatedField(this,1,value,opt_index)};proto.inorbit.FloatingPointList.prototype.clearRunsList=function(){this.setRunsList([])};/**
 * repeated float values = 2;
 * @return {!Array.<number>}
 */proto.inorbit.FloatingPointList.prototype.getValuesList=function(){return jspb.Message.getRepeatedFloatingPointField(this,2)};/** @param {!Array.<number>} value */proto.inorbit.FloatingPointList.prototype.setValuesList=function(value){jspb.Message.setField(this,2,value||[])};/**
 * @param {!number} value
 * @param {number=} opt_index
 */proto.inorbit.FloatingPointList.prototype.addValues=function(value,opt_index){jspb.Message.addToRepeatedField(this,2,value,opt_index)};proto.inorbit.FloatingPointList.prototype.clearValuesList=function(){this.setValuesList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.LocationAndPoseMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.LocationAndPoseMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.LocationAndPoseMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.LocationAndPoseMessage.displayName="proto.inorbit.LocationAndPoseMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.LocationAndPoseMessage.repeatedFields_=[5];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.LocationAndPoseMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.LocationAndPoseMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.LocationAndPoseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.LocationAndPoseMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),posX:+jspb.Message.getFieldWithDefault(msg,2,0),posY:+jspb.Message.getFieldWithDefault(msg,3,0),yaw:+jspb.Message.getFieldWithDefault(msg,4,0),lasersList:jspb.Message.toObjectList(msg.getLasersList(),proto.inorbit.LaserMessage.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.LocationAndPoseMessage}
 */proto.inorbit.LocationAndPoseMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.LocationAndPoseMessage;return proto.inorbit.LocationAndPoseMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.LocationAndPoseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.LocationAndPoseMessage}
 */proto.inorbit.LocationAndPoseMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readFloat();msg.setPosX(value);break;case 3:var value=reader.readFloat();msg.setPosY(value);break;case 4:var value=reader.readFloat();msg.setYaw(value);break;case 5:var value=new proto.inorbit.LaserMessage;reader.readMessage(value,proto.inorbit.LaserMessage.deserializeBinaryFromReader);msg.addLasers(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.LocationAndPoseMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.LocationAndPoseMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.LocationAndPoseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.LocationAndPoseMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getPosX();if(f!==0){writer.writeFloat(2,f)}f=message.getPosY();if(f!==0){writer.writeFloat(3,f)}f=message.getYaw();if(f!==0){writer.writeFloat(4,f)}f=message.getLasersList();if(f.length>0){writer.writeRepeatedMessage(5,f,proto.inorbit.LaserMessage.serializeBinaryToWriter)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.LocationAndPoseMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.LocationAndPoseMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional float pos_x = 2;
 * @return {number}
 */proto.inorbit.LocationAndPoseMessage.prototype.getPosX=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.LocationAndPoseMessage.prototype.setPosX=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * optional float pos_y = 3;
 * @return {number}
 */proto.inorbit.LocationAndPoseMessage.prototype.getPosY=function(){return+jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.LocationAndPoseMessage.prototype.setPosY=function(value){jspb.Message.setProto3FloatField(this,3,value)};/**
 * optional float yaw = 4;
 * @return {number}
 */proto.inorbit.LocationAndPoseMessage.prototype.getYaw=function(){return+jspb.Message.getFieldWithDefault(this,4,0)};/** @param {number} value */proto.inorbit.LocationAndPoseMessage.prototype.setYaw=function(value){jspb.Message.setProto3FloatField(this,4,value)};/**
 * repeated LaserMessage lasers = 5;
 * @return {!Array.<!proto.inorbit.LaserMessage>}
 */proto.inorbit.LocationAndPoseMessage.prototype.getLasersList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.LaserMessage,5)};/** @param {!Array.<!proto.inorbit.LaserMessage>} value */proto.inorbit.LocationAndPoseMessage.prototype.setLasersList=function(value){jspb.Message.setRepeatedWrapperField(this,5,value)};/**
 * @param {!proto.inorbit.LaserMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.LaserMessage}
 */proto.inorbit.LocationAndPoseMessage.prototype.addLasers=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,5,opt_value,proto.inorbit.LaserMessage,opt_index)};proto.inorbit.LocationAndPoseMessage.prototype.clearLasersList=function(){this.setLasersList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.PoseMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.PoseMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.PoseMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.PoseMessage.displayName="proto.inorbit.PoseMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.PoseMessage.repeatedFields_=[1];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.PoseMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.PoseMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.PoseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PoseMessage.toObject=function(includeInstance,msg){var f,obj={posesList:jspb.Message.toObjectList(msg.getPosesList(),proto.inorbit.PoseMessageData.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.PoseMessage}
 */proto.inorbit.PoseMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.PoseMessage;return proto.inorbit.PoseMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.PoseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.PoseMessage}
 */proto.inorbit.PoseMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.inorbit.PoseMessageData;reader.readMessage(value,proto.inorbit.PoseMessageData.deserializeBinaryFromReader);msg.addPoses(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.PoseMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.PoseMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.PoseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PoseMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getPosesList();if(f.length>0){writer.writeRepeatedMessage(1,f,proto.inorbit.PoseMessageData.serializeBinaryToWriter)}};/**
 * repeated PoseMessageData poses = 1;
 * @return {!Array.<!proto.inorbit.PoseMessageData>}
 */proto.inorbit.PoseMessage.prototype.getPosesList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.PoseMessageData,1)};/** @param {!Array.<!proto.inorbit.PoseMessageData>} value */proto.inorbit.PoseMessage.prototype.setPosesList=function(value){jspb.Message.setRepeatedWrapperField(this,1,value)};/**
 * @param {!proto.inorbit.PoseMessageData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.PoseMessageData}
 */proto.inorbit.PoseMessage.prototype.addPoses=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,1,opt_value,proto.inorbit.PoseMessageData,opt_index)};proto.inorbit.PoseMessage.prototype.clearPosesList=function(){this.setPosesList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.PoseMessageData=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.PoseMessageData,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.PoseMessageData.displayName="proto.inorbit.PoseMessageData"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.PoseMessageData.prototype.toObject=function(opt_includeInstance){return proto.inorbit.PoseMessageData.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.PoseMessageData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PoseMessageData.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),posX:+jspb.Message.getFieldWithDefault(msg,2,0),posY:+jspb.Message.getFieldWithDefault(msg,3,0),yaw:+jspb.Message.getFieldWithDefault(msg,4,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.PoseMessageData}
 */proto.inorbit.PoseMessageData.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.PoseMessageData;return proto.inorbit.PoseMessageData.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.PoseMessageData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.PoseMessageData}
 */proto.inorbit.PoseMessageData.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readFloat();msg.setPosX(value);break;case 3:var value=reader.readFloat();msg.setPosY(value);break;case 4:var value=reader.readFloat();msg.setYaw(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.PoseMessageData.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.PoseMessageData.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.PoseMessageData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.PoseMessageData.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getPosX();if(f!==0){writer.writeFloat(2,f)}f=message.getPosY();if(f!==0){writer.writeFloat(3,f)}f=message.getYaw();if(f!==0){writer.writeFloat(4,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.PoseMessageData.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.PoseMessageData.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional float pos_x = 2;
 * @return {number}
 */proto.inorbit.PoseMessageData.prototype.getPosX=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.PoseMessageData.prototype.setPosX=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * optional float pos_y = 3;
 * @return {number}
 */proto.inorbit.PoseMessageData.prototype.getPosY=function(){return+jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.PoseMessageData.prototype.setPosY=function(value){jspb.Message.setProto3FloatField(this,3,value)};/**
 * optional float yaw = 4;
 * @return {number}
 */proto.inorbit.PoseMessageData.prototype.getYaw=function(){return+jspb.Message.getFieldWithDefault(this,4,0)};/** @param {number} value */proto.inorbit.PoseMessageData.prototype.setYaw=function(value){jspb.Message.setProto3FloatField(this,4,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.CameraMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.CameraMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.CameraMessage.displayName="proto.inorbit.CameraMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.CameraMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.CameraMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.CameraMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CameraMessage.toObject=function(includeInstance,msg){var f,obj={cameraId:jspb.Message.getFieldWithDefault(msg,1,""),width:jspb.Message.getFieldWithDefault(msg,2,0),height:jspb.Message.getFieldWithDefault(msg,3,0),image:msg.getImage_asB64(),ts:jspb.Message.getFieldWithDefault(msg,5,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.CameraMessage}
 */proto.inorbit.CameraMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.CameraMessage;return proto.inorbit.CameraMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.CameraMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.CameraMessage}
 */proto.inorbit.CameraMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setCameraId(value);break;case 2:var value=reader.readUint32();msg.setWidth(value);break;case 3:var value=reader.readUint32();msg.setHeight(value);break;case 4:var value=reader.readBytes();msg.setImage(value);break;case 5:var value=reader.readInt64();msg.setTs(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.CameraMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.CameraMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.CameraMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CameraMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getCameraId();if(f.length>0){writer.writeString(1,f)}f=message.getWidth();if(f!==0){writer.writeUint32(2,f)}f=message.getHeight();if(f!==0){writer.writeUint32(3,f)}f=message.getImage_asU8();if(f.length>0){writer.writeBytes(4,f)}f=message.getTs();if(f!==0){writer.writeInt64(5,f)}};/**
 * optional string camera_id = 1;
 * @return {string}
 */proto.inorbit.CameraMessage.prototype.getCameraId=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.CameraMessage.prototype.setCameraId=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional uint32 width = 2;
 * @return {number}
 */proto.inorbit.CameraMessage.prototype.getWidth=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.CameraMessage.prototype.setWidth=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional uint32 height = 3;
 * @return {number}
 */proto.inorbit.CameraMessage.prototype.getHeight=function(){return jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.CameraMessage.prototype.setHeight=function(value){jspb.Message.setProto3IntField(this,3,value)};/**
 * optional bytes image = 4;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.CameraMessage.prototype.getImage=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/**
 * optional bytes image = 4;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */proto.inorbit.CameraMessage.prototype.getImage_asB64=function(){return jspb.Message.bytesAsB64(this.getImage())};/**
 * optional bytes image = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */proto.inorbit.CameraMessage.prototype.getImage_asU8=function(){return jspb.Message.bytesAsU8(this.getImage())};/** @param {!(string|Uint8Array)} value */proto.inorbit.CameraMessage.prototype.setImage=function(value){jspb.Message.setProto3BytesField(this,4,value)};/**
 * optional int64 ts = 5;
 * @return {number}
 */proto.inorbit.CameraMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.CameraMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,5,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RobotFileData=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.RobotFileData,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RobotFileData.displayName="proto.inorbit.RobotFileData"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RobotFileData.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RobotFileData.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RobotFileData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RobotFileData.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),storedInRobot:jspb.Message.getFieldWithDefault(msg,2,false),uploadingToCloud:jspb.Message.getFieldWithDefault(msg,3,false),url:jspb.Message.getFieldWithDefault(msg,4,""),ts:jspb.Message.getFieldWithDefault(msg,5,0),size:jspb.Message.getFieldWithDefault(msg,6,0),type:jspb.Message.getFieldWithDefault(msg,7,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RobotFileData}
 */proto.inorbit.RobotFileData.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RobotFileData;return proto.inorbit.RobotFileData.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RobotFileData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RobotFileData}
 */proto.inorbit.RobotFileData.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readBool();msg.setStoredInRobot(value);break;case 3:var value=reader.readBool();msg.setUploadingToCloud(value);break;case 4:var value=reader.readString();msg.setUrl(value);break;case 5:var value=reader.readInt64();msg.setTs(value);break;case 6:var value=reader.readInt64();msg.setSize(value);break;case 7:var value=reader.readString();msg.setType(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RobotFileData.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RobotFileData.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RobotFileData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RobotFileData.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getStoredInRobot();if(f){writer.writeBool(2,f)}f=message.getUploadingToCloud();if(f){writer.writeBool(3,f)}f=message.getUrl();if(f.length>0){writer.writeString(4,f)}f=message.getTs();if(f!==0){writer.writeInt64(5,f)}f=message.getSize();if(f!==0){writer.writeInt64(6,f)}f=message.getType();if(f.length>0){writer.writeString(7,f)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.RobotFileData.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.RobotFileData.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional bool stored_in_robot = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RobotFileData.prototype.getStoredInRobot=function(){return jspb.Message.getFieldWithDefault(this,2,false)};/** @param {boolean} value */proto.inorbit.RobotFileData.prototype.setStoredInRobot=function(value){jspb.Message.setProto3BooleanField(this,2,value)};/**
 * optional bool uploading_to_cloud = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RobotFileData.prototype.getUploadingToCloud=function(){return jspb.Message.getFieldWithDefault(this,3,false)};/** @param {boolean} value */proto.inorbit.RobotFileData.prototype.setUploadingToCloud=function(value){jspb.Message.setProto3BooleanField(this,3,value)};/**
 * optional string url = 4;
 * @return {string}
 */proto.inorbit.RobotFileData.prototype.getUrl=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.RobotFileData.prototype.setUrl=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional int64 ts = 5;
 * @return {number}
 */proto.inorbit.RobotFileData.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,5,0)};/** @param {number} value */proto.inorbit.RobotFileData.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,5,value)};/**
 * optional int64 size = 6;
 * @return {number}
 */proto.inorbit.RobotFileData.prototype.getSize=function(){return jspb.Message.getFieldWithDefault(this,6,0)};/** @param {number} value */proto.inorbit.RobotFileData.prototype.setSize=function(value){jspb.Message.setProto3IntField(this,6,value)};/**
 * optional string type = 7;
 * @return {string}
 */proto.inorbit.RobotFileData.prototype.getType=function(){return jspb.Message.getFieldWithDefault(this,7,"")};/** @param {string} value */proto.inorbit.RobotFileData.prototype.setType=function(value){jspb.Message.setProto3StringField(this,7,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RobotFilesUpdateMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.RobotFilesUpdateMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.RobotFilesUpdateMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RobotFilesUpdateMessage.displayName="proto.inorbit.RobotFilesUpdateMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.RobotFilesUpdateMessage.repeatedFields_=[1];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RobotFilesUpdateMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RobotFilesUpdateMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RobotFilesUpdateMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RobotFilesUpdateMessage.toObject=function(includeInstance,msg){var f,obj={artifactsList:jspb.Message.toObjectList(msg.getArtifactsList(),proto.inorbit.RobotFileData.toObject,includeInstance),ts:jspb.Message.getFieldWithDefault(msg,2,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RobotFilesUpdateMessage}
 */proto.inorbit.RobotFilesUpdateMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RobotFilesUpdateMessage;return proto.inorbit.RobotFilesUpdateMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RobotFilesUpdateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RobotFilesUpdateMessage}
 */proto.inorbit.RobotFilesUpdateMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.inorbit.RobotFileData;reader.readMessage(value,proto.inorbit.RobotFileData.deserializeBinaryFromReader);msg.addArtifacts(value);break;case 2:var value=reader.readInt64();msg.setTs(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RobotFilesUpdateMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RobotFilesUpdateMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RobotFilesUpdateMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RobotFilesUpdateMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getArtifactsList();if(f.length>0){writer.writeRepeatedMessage(1,f,proto.inorbit.RobotFileData.serializeBinaryToWriter)}f=message.getTs();if(f!==0){writer.writeInt64(2,f)}};/**
 * repeated RobotFileData artifacts = 1;
 * @return {!Array.<!proto.inorbit.RobotFileData>}
 */proto.inorbit.RobotFilesUpdateMessage.prototype.getArtifactsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.RobotFileData,1)};/** @param {!Array.<!proto.inorbit.RobotFileData>} value */proto.inorbit.RobotFilesUpdateMessage.prototype.setArtifactsList=function(value){jspb.Message.setRepeatedWrapperField(this,1,value)};/**
 * @param {!proto.inorbit.RobotFileData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.RobotFileData}
 */proto.inorbit.RobotFilesUpdateMessage.prototype.addArtifacts=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,1,opt_value,proto.inorbit.RobotFileData,opt_index)};proto.inorbit.RobotFilesUpdateMessage.prototype.clearArtifactsList=function(){this.setArtifactsList([])};/**
 * optional int64 ts = 2;
 * @return {number}
 */proto.inorbit.RobotFilesUpdateMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.RobotFilesUpdateMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.KeyValueCustomElement=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.KeyValueCustomElement,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.KeyValueCustomElement.displayName="proto.inorbit.KeyValueCustomElement"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.KeyValueCustomElement.prototype.toObject=function(opt_includeInstance){return proto.inorbit.KeyValueCustomElement.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.KeyValueCustomElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.KeyValueCustomElement.toObject=function(includeInstance,msg){var f,obj={key:jspb.Message.getFieldWithDefault(msg,1,""),value:jspb.Message.getFieldWithDefault(msg,2,""),ts:jspb.Message.getFieldWithDefault(msg,3,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.KeyValueCustomElement}
 */proto.inorbit.KeyValueCustomElement.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.KeyValueCustomElement;return proto.inorbit.KeyValueCustomElement.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.KeyValueCustomElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.KeyValueCustomElement}
 */proto.inorbit.KeyValueCustomElement.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setKey(value);break;case 2:var value=reader.readString();msg.setValue(value);break;case 3:var value=reader.readInt64();msg.setTs(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.KeyValueCustomElement.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.KeyValueCustomElement.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.KeyValueCustomElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.KeyValueCustomElement.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getKey();if(f.length>0){writer.writeString(1,f)}f=message.getValue();if(f.length>0){writer.writeString(2,f)}f=message.getTs();if(f!==0){writer.writeInt64(3,f)}};/**
 * optional string key = 1;
 * @return {string}
 */proto.inorbit.KeyValueCustomElement.prototype.getKey=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.KeyValueCustomElement.prototype.setKey=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional string value = 2;
 * @return {string}
 */proto.inorbit.KeyValueCustomElement.prototype.getValue=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.KeyValueCustomElement.prototype.setValue=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * optional int64 ts = 3;
 * @return {number}
 */proto.inorbit.KeyValueCustomElement.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.KeyValueCustomElement.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.KeyValuePairs=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.KeyValuePairs.repeatedFields_,null)};goog.inherits(proto.inorbit.KeyValuePairs,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.KeyValuePairs.displayName="proto.inorbit.KeyValuePairs"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.KeyValuePairs.repeatedFields_=[1];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.KeyValuePairs.prototype.toObject=function(opt_includeInstance){return proto.inorbit.KeyValuePairs.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.KeyValuePairs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.KeyValuePairs.toObject=function(includeInstance,msg){var f,obj={pairsList:jspb.Message.toObjectList(msg.getPairsList(),proto.inorbit.KeyValueCustomElement.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.KeyValuePairs}
 */proto.inorbit.KeyValuePairs.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.KeyValuePairs;return proto.inorbit.KeyValuePairs.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.KeyValuePairs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.KeyValuePairs}
 */proto.inorbit.KeyValuePairs.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.inorbit.KeyValueCustomElement;reader.readMessage(value,proto.inorbit.KeyValueCustomElement.deserializeBinaryFromReader);msg.addPairs(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.KeyValuePairs.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.KeyValuePairs.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.KeyValuePairs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.KeyValuePairs.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getPairsList();if(f.length>0){writer.writeRepeatedMessage(1,f,proto.inorbit.KeyValueCustomElement.serializeBinaryToWriter)}};/**
 * repeated KeyValueCustomElement pairs = 1;
 * @return {!Array.<!proto.inorbit.KeyValueCustomElement>}
 */proto.inorbit.KeyValuePairs.prototype.getPairsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.KeyValueCustomElement,1)};/** @param {!Array.<!proto.inorbit.KeyValueCustomElement>} value */proto.inorbit.KeyValuePairs.prototype.setPairsList=function(value){jspb.Message.setRepeatedWrapperField(this,1,value)};/**
 * @param {!proto.inorbit.KeyValueCustomElement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.KeyValueCustomElement}
 */proto.inorbit.KeyValuePairs.prototype.addPairs=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,1,opt_value,proto.inorbit.KeyValueCustomElement,opt_index)};proto.inorbit.KeyValuePairs.prototype.clearPairsList=function(){this.setPairsList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.DiagnosticsMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.DiagnosticsMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.DiagnosticsMessage.displayName="proto.inorbit.DiagnosticsMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.DiagnosticsMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.DiagnosticsMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.DiagnosticsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.DiagnosticsMessage.toObject=function(includeInstance,msg){var f,obj={label:jspb.Message.getFieldWithDefault(msg,1,""),key:jspb.Message.getFieldWithDefault(msg,2,""),value:jspb.Message.getFieldWithDefault(msg,3,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.DiagnosticsMessage}
 */proto.inorbit.DiagnosticsMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.DiagnosticsMessage;return proto.inorbit.DiagnosticsMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.DiagnosticsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.DiagnosticsMessage}
 */proto.inorbit.DiagnosticsMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setLabel(value);break;case 2:var value=reader.readString();msg.setKey(value);break;case 3:var value=reader.readString();msg.setValue(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.DiagnosticsMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.DiagnosticsMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.DiagnosticsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.DiagnosticsMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getLabel();if(f.length>0){writer.writeString(1,f)}f=message.getKey();if(f.length>0){writer.writeString(2,f)}f=message.getValue();if(f.length>0){writer.writeString(3,f)}};/**
 * optional string label = 1;
 * @return {string}
 */proto.inorbit.DiagnosticsMessage.prototype.getLabel=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.DiagnosticsMessage.prototype.setLabel=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional string key = 2;
 * @return {string}
 */proto.inorbit.DiagnosticsMessage.prototype.getKey=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.DiagnosticsMessage.prototype.setKey=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * optional string value = 3;
 * @return {string}
 */proto.inorbit.DiagnosticsMessage.prototype.getValue=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/** @param {string} value */proto.inorbit.DiagnosticsMessage.prototype.setValue=function(value){jspb.Message.setProto3StringField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.TextFileMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.TextFileMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.TextFileMessage.displayName="proto.inorbit.TextFileMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.TextFileMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.TextFileMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.TextFileMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.TextFileMessage.toObject=function(includeInstance,msg){var f,obj={data:msg.getData_asB64(),blobOffset:jspb.Message.getFieldWithDefault(msg,2,0),blobSize:jspb.Message.getFieldWithDefault(msg,3,0),totalFileSize:jspb.Message.getFieldWithDefault(msg,4,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.TextFileMessage}
 */proto.inorbit.TextFileMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.TextFileMessage;return proto.inorbit.TextFileMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.TextFileMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.TextFileMessage}
 */proto.inorbit.TextFileMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readBytes();msg.setData(value);break;case 2:var value=reader.readInt32();msg.setBlobOffset(value);break;case 3:var value=reader.readInt32();msg.setBlobSize(value);break;case 4:var value=reader.readInt32();msg.setTotalFileSize(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.TextFileMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.TextFileMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.TextFileMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.TextFileMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getData_asU8();if(f.length>0){writer.writeBytes(1,f)}f=message.getBlobOffset();if(f!==0){writer.writeInt32(2,f)}f=message.getBlobSize();if(f!==0){writer.writeInt32(3,f)}f=message.getTotalFileSize();if(f!==0){writer.writeInt32(4,f)}};/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.TextFileMessage.prototype.getData=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */proto.inorbit.TextFileMessage.prototype.getData_asB64=function(){return jspb.Message.bytesAsB64(this.getData())};/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */proto.inorbit.TextFileMessage.prototype.getData_asU8=function(){return jspb.Message.bytesAsU8(this.getData())};/** @param {!(string|Uint8Array)} value */proto.inorbit.TextFileMessage.prototype.setData=function(value){jspb.Message.setProto3BytesField(this,1,value)};/**
 * optional int32 blob_offset = 2;
 * @return {number}
 */proto.inorbit.TextFileMessage.prototype.getBlobOffset=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.TextFileMessage.prototype.setBlobOffset=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional int32 blob_size = 3;
 * @return {number}
 */proto.inorbit.TextFileMessage.prototype.getBlobSize=function(){return jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.TextFileMessage.prototype.setBlobSize=function(value){jspb.Message.setProto3IntField(this,3,value)};/**
 * optional int32 total_file_size = 4;
 * @return {number}
 */proto.inorbit.TextFileMessage.prototype.getTotalFileSize=function(){return jspb.Message.getFieldWithDefault(this,4,0)};/** @param {number} value */proto.inorbit.TextFileMessage.prototype.setTotalFileSize=function(value){jspb.Message.setProto3IntField(this,4,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.CustomDataMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,proto.inorbit.CustomDataMessage.oneofGroups_)};goog.inherits(proto.inorbit.CustomDataMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.CustomDataMessage.displayName="proto.inorbit.CustomDataMessage"}/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */proto.inorbit.CustomDataMessage.oneofGroups_=[[2,3,4,5,6]];/**
 * @enum {number}
 */proto.inorbit.CustomDataMessage.PayloadCase={PAYLOAD_NOT_SET:0,KEY_VALUE_PAYLOAD:2,IMAGE_PAYLOAD:3,TEXT_FILE_PAYLOAD:4,DIAGNOSTICS_PAYLOAD:5,TEXT_FILE_PAYLOAD_2:6};/**
 * @return {proto.inorbit.CustomDataMessage.PayloadCase}
 */proto.inorbit.CustomDataMessage.prototype.getPayloadCase=function(){return jspb.Message.computeOneofCase(this,proto.inorbit.CustomDataMessage.oneofGroups_[0])};if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.CustomDataMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.CustomDataMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.CustomDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomDataMessage.toObject=function(includeInstance,msg){var f,obj={customField:jspb.Message.getFieldWithDefault(msg,1,""),keyValuePayload:(f=msg.getKeyValuePayload())&&proto.inorbit.KeyValuePairs.toObject(includeInstance,f),imagePayload:msg.getImagePayload_asB64(),textFilePayload:msg.getTextFilePayload_asB64(),diagnosticsPayload:(f=msg.getDiagnosticsPayload())&&proto.inorbit.DiagnosticsMessage.toObject(includeInstance,f),textFilePayload2:(f=msg.getTextFilePayload2())&&proto.inorbit.TextFileMessage.toObject(includeInstance,f)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.CustomDataMessage}
 */proto.inorbit.CustomDataMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.CustomDataMessage;return proto.inorbit.CustomDataMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.CustomDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.CustomDataMessage}
 */proto.inorbit.CustomDataMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setCustomField(value);break;case 2:var value=new proto.inorbit.KeyValuePairs;reader.readMessage(value,proto.inorbit.KeyValuePairs.deserializeBinaryFromReader);msg.setKeyValuePayload(value);break;case 3:var value=reader.readBytes();msg.setImagePayload(value);break;case 4:var value=reader.readBytes();msg.setTextFilePayload(value);break;case 5:var value=new proto.inorbit.DiagnosticsMessage;reader.readMessage(value,proto.inorbit.DiagnosticsMessage.deserializeBinaryFromReader);msg.setDiagnosticsPayload(value);break;case 6:var value=new proto.inorbit.TextFileMessage;reader.readMessage(value,proto.inorbit.TextFileMessage.deserializeBinaryFromReader);msg.setTextFilePayload2(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.CustomDataMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.CustomDataMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.CustomDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomDataMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getCustomField();if(f.length>0){writer.writeString(1,f)}f=message.getKeyValuePayload();if(f!=null){writer.writeMessage(2,f,proto.inorbit.KeyValuePairs.serializeBinaryToWriter)}f=jspb.Message.getField(message,3);if(f!=null){writer.writeBytes(3,f)}f=jspb.Message.getField(message,4);if(f!=null){writer.writeBytes(4,f)}f=message.getDiagnosticsPayload();if(f!=null){writer.writeMessage(5,f,proto.inorbit.DiagnosticsMessage.serializeBinaryToWriter)}f=message.getTextFilePayload2();if(f!=null){writer.writeMessage(6,f,proto.inorbit.TextFileMessage.serializeBinaryToWriter)}};/**
 * optional string custom_field = 1;
 * @return {string}
 */proto.inorbit.CustomDataMessage.prototype.getCustomField=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.CustomDataMessage.prototype.setCustomField=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional KeyValuePairs key_value_payload = 2;
 * @return {?proto.inorbit.KeyValuePairs}
 */proto.inorbit.CustomDataMessage.prototype.getKeyValuePayload=function(){return jspb.Message.getWrapperField(this,proto.inorbit.KeyValuePairs,2)};/** @param {?proto.inorbit.KeyValuePairs|undefined} value */proto.inorbit.CustomDataMessage.prototype.setKeyValuePayload=function(value){jspb.Message.setOneofWrapperField(this,2,proto.inorbit.CustomDataMessage.oneofGroups_[0],value)};proto.inorbit.CustomDataMessage.prototype.clearKeyValuePayload=function(){this.setKeyValuePayload(undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.CustomDataMessage.prototype.hasKeyValuePayload=function(){return jspb.Message.getField(this,2)!=null};/**
 * optional bytes image_payload = 3;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.CustomDataMessage.prototype.getImagePayload=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/**
 * optional bytes image_payload = 3;
 * This is a type-conversion wrapper around `getImagePayload()`
 * @return {string}
 */proto.inorbit.CustomDataMessage.prototype.getImagePayload_asB64=function(){return jspb.Message.bytesAsB64(this.getImagePayload())};/**
 * optional bytes image_payload = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagePayload()`
 * @return {!Uint8Array}
 */proto.inorbit.CustomDataMessage.prototype.getImagePayload_asU8=function(){return jspb.Message.bytesAsU8(this.getImagePayload())};/** @param {!(string|Uint8Array)} value */proto.inorbit.CustomDataMessage.prototype.setImagePayload=function(value){jspb.Message.setOneofField(this,3,proto.inorbit.CustomDataMessage.oneofGroups_[0],value)};proto.inorbit.CustomDataMessage.prototype.clearImagePayload=function(){jspb.Message.setOneofField(this,3,proto.inorbit.CustomDataMessage.oneofGroups_[0],undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.CustomDataMessage.prototype.hasImagePayload=function(){return jspb.Message.getField(this,3)!=null};/**
 * optional bytes text_file_payload = 4;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.CustomDataMessage.prototype.getTextFilePayload=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/**
 * optional bytes text_file_payload = 4;
 * This is a type-conversion wrapper around `getTextFilePayload()`
 * @return {string}
 */proto.inorbit.CustomDataMessage.prototype.getTextFilePayload_asB64=function(){return jspb.Message.bytesAsB64(this.getTextFilePayload())};/**
 * optional bytes text_file_payload = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTextFilePayload()`
 * @return {!Uint8Array}
 */proto.inorbit.CustomDataMessage.prototype.getTextFilePayload_asU8=function(){return jspb.Message.bytesAsU8(this.getTextFilePayload())};/** @param {!(string|Uint8Array)} value */proto.inorbit.CustomDataMessage.prototype.setTextFilePayload=function(value){jspb.Message.setOneofField(this,4,proto.inorbit.CustomDataMessage.oneofGroups_[0],value)};proto.inorbit.CustomDataMessage.prototype.clearTextFilePayload=function(){jspb.Message.setOneofField(this,4,proto.inorbit.CustomDataMessage.oneofGroups_[0],undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.CustomDataMessage.prototype.hasTextFilePayload=function(){return jspb.Message.getField(this,4)!=null};/**
 * optional DiagnosticsMessage diagnostics_payload = 5;
 * @return {?proto.inorbit.DiagnosticsMessage}
 */proto.inorbit.CustomDataMessage.prototype.getDiagnosticsPayload=function(){return jspb.Message.getWrapperField(this,proto.inorbit.DiagnosticsMessage,5)};/** @param {?proto.inorbit.DiagnosticsMessage|undefined} value */proto.inorbit.CustomDataMessage.prototype.setDiagnosticsPayload=function(value){jspb.Message.setOneofWrapperField(this,5,proto.inorbit.CustomDataMessage.oneofGroups_[0],value)};proto.inorbit.CustomDataMessage.prototype.clearDiagnosticsPayload=function(){this.setDiagnosticsPayload(undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.CustomDataMessage.prototype.hasDiagnosticsPayload=function(){return jspb.Message.getField(this,5)!=null};/**
 * optional TextFileMessage text_file_payload_2 = 6;
 * @return {?proto.inorbit.TextFileMessage}
 */proto.inorbit.CustomDataMessage.prototype.getTextFilePayload2=function(){return jspb.Message.getWrapperField(this,proto.inorbit.TextFileMessage,6)};/** @param {?proto.inorbit.TextFileMessage|undefined} value */proto.inorbit.CustomDataMessage.prototype.setTextFilePayload2=function(value){jspb.Message.setOneofWrapperField(this,6,proto.inorbit.CustomDataMessage.oneofGroups_[0],value)};proto.inorbit.CustomDataMessage.prototype.clearTextFilePayload2=function(){this.setTextFilePayload2(undefined)};/**
 * Returns whether this field is set.
 * @return {!boolean}
 */proto.inorbit.CustomDataMessage.prototype.hasTextFilePayload2=function(){return jspb.Message.getField(this,6)!=null};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.TopicMonitorMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.TopicMonitorMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.TopicMonitorMessage.displayName="proto.inorbit.TopicMonitorMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.TopicMonitorMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.TopicMonitorMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.TopicMonitorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.TopicMonitorMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),hasRate:jspb.Message.getFieldWithDefault(msg,2,false),rate:jspb.Message.getFieldWithDefault(msg,3,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.TopicMonitorMessage}
 */proto.inorbit.TopicMonitorMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.TopicMonitorMessage;return proto.inorbit.TopicMonitorMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.TopicMonitorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.TopicMonitorMessage}
 */proto.inorbit.TopicMonitorMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readBool();msg.setHasRate(value);break;case 3:var value=reader.readInt32();msg.setRate(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.TopicMonitorMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.TopicMonitorMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.TopicMonitorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.TopicMonitorMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getHasRate();if(f){writer.writeBool(2,f)}f=message.getRate();if(f!==0){writer.writeInt32(3,f)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.TopicMonitorMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.TopicMonitorMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional bool has_rate = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.TopicMonitorMessage.prototype.getHasRate=function(){return jspb.Message.getFieldWithDefault(this,2,false)};/** @param {boolean} value */proto.inorbit.TopicMonitorMessage.prototype.setHasRate=function(value){jspb.Message.setProto3BooleanField(this,2,value)};/**
 * optional int32 rate = 3;
 * @return {number}
 */proto.inorbit.TopicMonitorMessage.prototype.getRate=function(){return jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.TopicMonitorMessage.prototype.setRate=function(value){jspb.Message.setProto3IntField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.ParamMonitorMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.ParamMonitorMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.ParamMonitorMessage.displayName="proto.inorbit.ParamMonitorMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.ParamMonitorMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.ParamMonitorMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.ParamMonitorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.ParamMonitorMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),value:jspb.Message.getFieldWithDefault(msg,2,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.ParamMonitorMessage}
 */proto.inorbit.ParamMonitorMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.ParamMonitorMessage;return proto.inorbit.ParamMonitorMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.ParamMonitorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.ParamMonitorMessage}
 */proto.inorbit.ParamMonitorMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readString();msg.setValue(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.ParamMonitorMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.ParamMonitorMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.ParamMonitorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.ParamMonitorMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getValue();if(f.length>0){writer.writeString(2,f)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.ParamMonitorMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.ParamMonitorMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional string value = 2;
 * @return {string}
 */proto.inorbit.ParamMonitorMessage.prototype.getValue=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.ParamMonitorMessage.prototype.setValue=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.NodeMonitorMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.NodeMonitorMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.NodeMonitorMessage.displayName="proto.inorbit.NodeMonitorMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.NodeMonitorMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.NodeMonitorMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.NodeMonitorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.NodeMonitorMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),hasPingResponse:jspb.Message.getFieldWithDefault(msg,2,false),pinged:jspb.Message.getFieldWithDefault(msg,3,false)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.NodeMonitorMessage}
 */proto.inorbit.NodeMonitorMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.NodeMonitorMessage;return proto.inorbit.NodeMonitorMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.NodeMonitorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.NodeMonitorMessage}
 */proto.inorbit.NodeMonitorMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readBool();msg.setHasPingResponse(value);break;case 3:var value=reader.readBool();msg.setPinged(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.NodeMonitorMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.NodeMonitorMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.NodeMonitorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.NodeMonitorMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getHasPingResponse();if(f){writer.writeBool(2,f)}f=message.getPinged();if(f){writer.writeBool(3,f)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.NodeMonitorMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.NodeMonitorMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional bool has_ping_response = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.NodeMonitorMessage.prototype.getHasPingResponse=function(){return jspb.Message.getFieldWithDefault(this,2,false)};/** @param {boolean} value */proto.inorbit.NodeMonitorMessage.prototype.setHasPingResponse=function(value){jspb.Message.setProto3BooleanField(this,2,value)};/**
 * optional bool pinged = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.NodeMonitorMessage.prototype.getPinged=function(){return jspb.Message.getFieldWithDefault(this,3,false)};/** @param {boolean} value */proto.inorbit.NodeMonitorMessage.prototype.setPinged=function(value){jspb.Message.setProto3BooleanField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.ServiceMonitorMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.ServiceMonitorMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.ServiceMonitorMessage.displayName="proto.inorbit.ServiceMonitorMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.ServiceMonitorMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.ServiceMonitorMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.ServiceMonitorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.ServiceMonitorMessage.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.ServiceMonitorMessage}
 */proto.inorbit.ServiceMonitorMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.ServiceMonitorMessage;return proto.inorbit.ServiceMonitorMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.ServiceMonitorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.ServiceMonitorMessage}
 */proto.inorbit.ServiceMonitorMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.ServiceMonitorMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.ServiceMonitorMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.ServiceMonitorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.ServiceMonitorMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.ServiceMonitorMessage.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.ServiceMonitorMessage.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RosMonitorMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.RosMonitorMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.RosMonitorMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RosMonitorMessage.displayName="proto.inorbit.RosMonitorMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.RosMonitorMessage.repeatedFields_=[3,4,5,6];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RosMonitorMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RosMonitorMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RosMonitorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosMonitorMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),masterStatus:jspb.Message.getFieldWithDefault(msg,2,0),topicsUpdateList:jspb.Message.toObjectList(msg.getTopicsUpdateList(),proto.inorbit.TopicMonitorMessage.toObject,includeInstance),paramsUpdateList:jspb.Message.toObjectList(msg.getParamsUpdateList(),proto.inorbit.ParamMonitorMessage.toObject,includeInstance),nodesUpdateList:jspb.Message.toObjectList(msg.getNodesUpdateList(),proto.inorbit.NodeMonitorMessage.toObject,includeInstance),servicesUpdateList:jspb.Message.toObjectList(msg.getServicesUpdateList(),proto.inorbit.ServiceMonitorMessage.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RosMonitorMessage}
 */proto.inorbit.RosMonitorMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RosMonitorMessage;return proto.inorbit.RosMonitorMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RosMonitorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RosMonitorMessage}
 */proto.inorbit.RosMonitorMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readInt32();msg.setMasterStatus(value);break;case 3:var value=new proto.inorbit.TopicMonitorMessage;reader.readMessage(value,proto.inorbit.TopicMonitorMessage.deserializeBinaryFromReader);msg.addTopicsUpdate(value);break;case 4:var value=new proto.inorbit.ParamMonitorMessage;reader.readMessage(value,proto.inorbit.ParamMonitorMessage.deserializeBinaryFromReader);msg.addParamsUpdate(value);break;case 5:var value=new proto.inorbit.NodeMonitorMessage;reader.readMessage(value,proto.inorbit.NodeMonitorMessage.deserializeBinaryFromReader);msg.addNodesUpdate(value);break;case 6:var value=new proto.inorbit.ServiceMonitorMessage;reader.readMessage(value,proto.inorbit.ServiceMonitorMessage.deserializeBinaryFromReader);msg.addServicesUpdate(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RosMonitorMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RosMonitorMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RosMonitorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosMonitorMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getMasterStatus();if(f!==0){writer.writeInt32(2,f)}f=message.getTopicsUpdateList();if(f.length>0){writer.writeRepeatedMessage(3,f,proto.inorbit.TopicMonitorMessage.serializeBinaryToWriter)}f=message.getParamsUpdateList();if(f.length>0){writer.writeRepeatedMessage(4,f,proto.inorbit.ParamMonitorMessage.serializeBinaryToWriter)}f=message.getNodesUpdateList();if(f.length>0){writer.writeRepeatedMessage(5,f,proto.inorbit.NodeMonitorMessage.serializeBinaryToWriter)}f=message.getServicesUpdateList();if(f.length>0){writer.writeRepeatedMessage(6,f,proto.inorbit.ServiceMonitorMessage.serializeBinaryToWriter)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.RosMonitorMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.RosMonitorMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional int32 master_status = 2;
 * @return {number}
 */proto.inorbit.RosMonitorMessage.prototype.getMasterStatus=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.RosMonitorMessage.prototype.setMasterStatus=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * repeated TopicMonitorMessage topics_update = 3;
 * @return {!Array.<!proto.inorbit.TopicMonitorMessage>}
 */proto.inorbit.RosMonitorMessage.prototype.getTopicsUpdateList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.TopicMonitorMessage,3)};/** @param {!Array.<!proto.inorbit.TopicMonitorMessage>} value */proto.inorbit.RosMonitorMessage.prototype.setTopicsUpdateList=function(value){jspb.Message.setRepeatedWrapperField(this,3,value)};/**
 * @param {!proto.inorbit.TopicMonitorMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.TopicMonitorMessage}
 */proto.inorbit.RosMonitorMessage.prototype.addTopicsUpdate=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,3,opt_value,proto.inorbit.TopicMonitorMessage,opt_index)};proto.inorbit.RosMonitorMessage.prototype.clearTopicsUpdateList=function(){this.setTopicsUpdateList([])};/**
 * repeated ParamMonitorMessage params_update = 4;
 * @return {!Array.<!proto.inorbit.ParamMonitorMessage>}
 */proto.inorbit.RosMonitorMessage.prototype.getParamsUpdateList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.ParamMonitorMessage,4)};/** @param {!Array.<!proto.inorbit.ParamMonitorMessage>} value */proto.inorbit.RosMonitorMessage.prototype.setParamsUpdateList=function(value){jspb.Message.setRepeatedWrapperField(this,4,value)};/**
 * @param {!proto.inorbit.ParamMonitorMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.ParamMonitorMessage}
 */proto.inorbit.RosMonitorMessage.prototype.addParamsUpdate=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,4,opt_value,proto.inorbit.ParamMonitorMessage,opt_index)};proto.inorbit.RosMonitorMessage.prototype.clearParamsUpdateList=function(){this.setParamsUpdateList([])};/**
 * repeated NodeMonitorMessage nodes_update = 5;
 * @return {!Array.<!proto.inorbit.NodeMonitorMessage>}
 */proto.inorbit.RosMonitorMessage.prototype.getNodesUpdateList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.NodeMonitorMessage,5)};/** @param {!Array.<!proto.inorbit.NodeMonitorMessage>} value */proto.inorbit.RosMonitorMessage.prototype.setNodesUpdateList=function(value){jspb.Message.setRepeatedWrapperField(this,5,value)};/**
 * @param {!proto.inorbit.NodeMonitorMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.NodeMonitorMessage}
 */proto.inorbit.RosMonitorMessage.prototype.addNodesUpdate=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,5,opt_value,proto.inorbit.NodeMonitorMessage,opt_index)};proto.inorbit.RosMonitorMessage.prototype.clearNodesUpdateList=function(){this.setNodesUpdateList([])};/**
 * repeated ServiceMonitorMessage services_update = 6;
 * @return {!Array.<!proto.inorbit.ServiceMonitorMessage>}
 */proto.inorbit.RosMonitorMessage.prototype.getServicesUpdateList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.ServiceMonitorMessage,6)};/** @param {!Array.<!proto.inorbit.ServiceMonitorMessage>} value */proto.inorbit.RosMonitorMessage.prototype.setServicesUpdateList=function(value){jspb.Message.setRepeatedWrapperField(this,6,value)};/**
 * @param {!proto.inorbit.ServiceMonitorMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.ServiceMonitorMessage}
 */proto.inorbit.RosMonitorMessage.prototype.addServicesUpdate=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,6,opt_value,proto.inorbit.ServiceMonitorMessage,opt_index)};proto.inorbit.RosMonitorMessage.prototype.clearServicesUpdateList=function(){this.setServicesUpdateList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RosOutMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.RosOutMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RosOutMessage.displayName="proto.inorbit.RosOutMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RosOutMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RosOutMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RosOutMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosOutMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),log:msg.getLog_asB64(),hasSkippedMsgs:jspb.Message.getFieldWithDefault(msg,3,false)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RosOutMessage}
 */proto.inorbit.RosOutMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RosOutMessage;return proto.inorbit.RosOutMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RosOutMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RosOutMessage}
 */proto.inorbit.RosOutMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readBytes();msg.setLog(value);break;case 3:var value=reader.readBool();msg.setHasSkippedMsgs(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RosOutMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RosOutMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RosOutMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosOutMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getLog_asU8();if(f.length>0){writer.writeBytes(2,f)}f=message.getHasSkippedMsgs();if(f){writer.writeBool(3,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.RosOutMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.RosOutMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional bytes log = 2;
 * @return {!(string|Uint8Array)}
 */proto.inorbit.RosOutMessage.prototype.getLog=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/**
 * optional bytes log = 2;
 * This is a type-conversion wrapper around `getLog()`
 * @return {string}
 */proto.inorbit.RosOutMessage.prototype.getLog_asB64=function(){return jspb.Message.bytesAsB64(this.getLog())};/**
 * optional bytes log = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLog()`
 * @return {!Uint8Array}
 */proto.inorbit.RosOutMessage.prototype.getLog_asU8=function(){return jspb.Message.bytesAsU8(this.getLog())};/** @param {!(string|Uint8Array)} value */proto.inorbit.RosOutMessage.prototype.setLog=function(value){jspb.Message.setProto3BytesField(this,2,value)};/**
 * optional bool has_skipped_msgs = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RosOutMessage.prototype.getHasSkippedMsgs=function(){return jspb.Message.getFieldWithDefault(this,3,false)};/** @param {boolean} value */proto.inorbit.RosOutMessage.prototype.setHasSkippedMsgs=function(value){jspb.Message.setProto3BooleanField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.CustomCommandRosMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.CustomCommandRosMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.CustomCommandRosMessage.displayName="proto.inorbit.CustomCommandRosMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.CustomCommandRosMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.CustomCommandRosMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.CustomCommandRosMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomCommandRosMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),cmd:jspb.Message.getFieldWithDefault(msg,2,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.CustomCommandRosMessage}
 */proto.inorbit.CustomCommandRosMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.CustomCommandRosMessage;return proto.inorbit.CustomCommandRosMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.CustomCommandRosMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.CustomCommandRosMessage}
 */proto.inorbit.CustomCommandRosMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readString();msg.setCmd(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.CustomCommandRosMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.CustomCommandRosMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.CustomCommandRosMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomCommandRosMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getCmd();if(f.length>0){writer.writeString(2,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.CustomCommandRosMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.CustomCommandRosMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional string cmd = 2;
 * @return {string}
 */proto.inorbit.CustomCommandRosMessage.prototype.getCmd=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.CustomCommandRosMessage.prototype.setCmd=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.CustomScriptCommandMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.CustomScriptCommandMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.CustomScriptCommandMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.CustomScriptCommandMessage.displayName="proto.inorbit.CustomScriptCommandMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.CustomScriptCommandMessage.repeatedFields_=[3];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.CustomScriptCommandMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.CustomScriptCommandMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.CustomScriptCommandMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomScriptCommandMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),fileName:jspb.Message.getFieldWithDefault(msg,2,""),argOptionsList:jspb.Message.getRepeatedField(msg,3),scriptContents:jspb.Message.getFieldWithDefault(msg,4,""),run:jspb.Message.getFieldWithDefault(msg,5,false),executionId:jspb.Message.getFieldWithDefault(msg,6,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.CustomScriptCommandMessage}
 */proto.inorbit.CustomScriptCommandMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.CustomScriptCommandMessage;return proto.inorbit.CustomScriptCommandMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.CustomScriptCommandMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.CustomScriptCommandMessage}
 */proto.inorbit.CustomScriptCommandMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readString();msg.setFileName(value);break;case 3:var value=reader.readString();msg.addArgOptions(value);break;case 4:var value=reader.readString();msg.setScriptContents(value);break;case 5:var value=reader.readBool();msg.setRun(value);break;case 6:var value=reader.readString();msg.setExecutionId(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.CustomScriptCommandMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.CustomScriptCommandMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.CustomScriptCommandMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomScriptCommandMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getFileName();if(f.length>0){writer.writeString(2,f)}f=message.getArgOptionsList();if(f.length>0){writer.writeRepeatedString(3,f)}f=message.getScriptContents();if(f.length>0){writer.writeString(4,f)}f=message.getRun();if(f){writer.writeBool(5,f)}f=message.getExecutionId();if(f.length>0){writer.writeString(6,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.CustomScriptCommandMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.CustomScriptCommandMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional string file_name = 2;
 * @return {string}
 */proto.inorbit.CustomScriptCommandMessage.prototype.getFileName=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.CustomScriptCommandMessage.prototype.setFileName=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * repeated string arg_options = 3;
 * @return {!Array.<string>}
 */proto.inorbit.CustomScriptCommandMessage.prototype.getArgOptionsList=function(){return jspb.Message.getRepeatedField(this,3)};/** @param {!Array.<string>} value */proto.inorbit.CustomScriptCommandMessage.prototype.setArgOptionsList=function(value){jspb.Message.setField(this,3,value||[])};/**
 * @param {!string} value
 * @param {number=} opt_index
 */proto.inorbit.CustomScriptCommandMessage.prototype.addArgOptions=function(value,opt_index){jspb.Message.addToRepeatedField(this,3,value,opt_index)};proto.inorbit.CustomScriptCommandMessage.prototype.clearArgOptionsList=function(){this.setArgOptionsList([])};/**
 * optional string script_contents = 4;
 * @return {string}
 */proto.inorbit.CustomScriptCommandMessage.prototype.getScriptContents=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.CustomScriptCommandMessage.prototype.setScriptContents=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional bool run = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.CustomScriptCommandMessage.prototype.getRun=function(){return jspb.Message.getFieldWithDefault(this,5,false)};/** @param {boolean} value */proto.inorbit.CustomScriptCommandMessage.prototype.setRun=function(value){jspb.Message.setProto3BooleanField(this,5,value)};/**
 * optional string execution_id = 6;
 * @return {string}
 */proto.inorbit.CustomScriptCommandMessage.prototype.getExecutionId=function(){return jspb.Message.getFieldWithDefault(this,6,"")};/** @param {string} value */proto.inorbit.CustomScriptCommandMessage.prototype.setExecutionId=function(value){jspb.Message.setProto3StringField(this,6,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.CustomScriptStatusMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.CustomScriptStatusMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.CustomScriptStatusMessage.displayName="proto.inorbit.CustomScriptStatusMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.CustomScriptStatusMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.CustomScriptStatusMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.CustomScriptStatusMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomScriptStatusMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),fileName:jspb.Message.getFieldWithDefault(msg,2,""),executionStatus:jspb.Message.getFieldWithDefault(msg,3,""),returnCode:jspb.Message.getFieldWithDefault(msg,4,""),stdout:jspb.Message.getFieldWithDefault(msg,5,""),stderr:jspb.Message.getFieldWithDefault(msg,6,""),executionId:jspb.Message.getFieldWithDefault(msg,7,""),executionStatusDetails:jspb.Message.getFieldWithDefault(msg,8,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.CustomScriptStatusMessage}
 */proto.inorbit.CustomScriptStatusMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.CustomScriptStatusMessage;return proto.inorbit.CustomScriptStatusMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.CustomScriptStatusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.CustomScriptStatusMessage}
 */proto.inorbit.CustomScriptStatusMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readString();msg.setFileName(value);break;case 3:var value=reader.readString();msg.setExecutionStatus(value);break;case 4:var value=reader.readString();msg.setReturnCode(value);break;case 5:var value=reader.readString();msg.setStdout(value);break;case 6:var value=reader.readString();msg.setStderr(value);break;case 7:var value=reader.readString();msg.setExecutionId(value);break;case 8:var value=reader.readString();msg.setExecutionStatusDetails(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.CustomScriptStatusMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.CustomScriptStatusMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.CustomScriptStatusMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.CustomScriptStatusMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getFileName();if(f.length>0){writer.writeString(2,f)}f=message.getExecutionStatus();if(f.length>0){writer.writeString(3,f)}f=message.getReturnCode();if(f.length>0){writer.writeString(4,f)}f=message.getStdout();if(f.length>0){writer.writeString(5,f)}f=message.getStderr();if(f.length>0){writer.writeString(6,f)}f=message.getExecutionId();if(f.length>0){writer.writeString(7,f)}f=message.getExecutionStatusDetails();if(f.length>0){writer.writeString(8,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.CustomScriptStatusMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional string file_name = 2;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getFileName=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setFileName=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * optional string execution_status = 3;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getExecutionStatus=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setExecutionStatus=function(value){jspb.Message.setProto3StringField(this,3,value)};/**
 * optional string return_code = 4;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getReturnCode=function(){return jspb.Message.getFieldWithDefault(this,4,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setReturnCode=function(value){jspb.Message.setProto3StringField(this,4,value)};/**
 * optional string stdout = 5;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getStdout=function(){return jspb.Message.getFieldWithDefault(this,5,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setStdout=function(value){jspb.Message.setProto3StringField(this,5,value)};/**
 * optional string stderr = 6;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getStderr=function(){return jspb.Message.getFieldWithDefault(this,6,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setStderr=function(value){jspb.Message.setProto3StringField(this,6,value)};/**
 * optional string execution_id = 7;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getExecutionId=function(){return jspb.Message.getFieldWithDefault(this,7,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setExecutionId=function(value){jspb.Message.setProto3StringField(this,7,value)};/**
 * optional string execution_status_details = 8;
 * @return {string}
 */proto.inorbit.CustomScriptStatusMessage.prototype.getExecutionStatusDetails=function(){return jspb.Message.getFieldWithDefault(this,8,"")};/** @param {string} value */proto.inorbit.CustomScriptStatusMessage.prototype.setExecutionStatusDetails=function(value){jspb.Message.setProto3StringField(this,8,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.TeleopGoCommand=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.TeleopGoCommand,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.TeleopGoCommand.displayName="proto.inorbit.TeleopGoCommand"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.TeleopGoCommand.prototype.toObject=function(opt_includeInstance){return proto.inorbit.TeleopGoCommand.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.TeleopGoCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.TeleopGoCommand.toObject=function(includeInstance,msg){var f,obj={tsHint:jspb.Message.getFieldWithDefault(msg,1,0),linearVelocity:+jspb.Message.getFieldWithDefault(msg,2,0),angularVelocity:+jspb.Message.getFieldWithDefault(msg,3,0)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.TeleopGoCommand}
 */proto.inorbit.TeleopGoCommand.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.TeleopGoCommand;return proto.inorbit.TeleopGoCommand.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.TeleopGoCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.TeleopGoCommand}
 */proto.inorbit.TeleopGoCommand.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTsHint(value);break;case 2:var value=reader.readFloat();msg.setLinearVelocity(value);break;case 3:var value=reader.readFloat();msg.setAngularVelocity(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.TeleopGoCommand.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.TeleopGoCommand.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.TeleopGoCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.TeleopGoCommand.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTsHint();if(f!==0){writer.writeInt64(1,f)}f=message.getLinearVelocity();if(f!==0){writer.writeFloat(2,f)}f=message.getAngularVelocity();if(f!==0){writer.writeFloat(3,f)}};/**
 * optional int64 ts_hint = 1;
 * @return {number}
 */proto.inorbit.TeleopGoCommand.prototype.getTsHint=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.TeleopGoCommand.prototype.setTsHint=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional float linear_velocity = 2;
 * @return {number}
 */proto.inorbit.TeleopGoCommand.prototype.getLinearVelocity=function(){return+jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.TeleopGoCommand.prototype.setLinearVelocity=function(value){jspb.Message.setProto3FloatField(this,2,value)};/**
 * optional float angular_velocity = 3;
 * @return {number}
 */proto.inorbit.TeleopGoCommand.prototype.getAngularVelocity=function(){return+jspb.Message.getFieldWithDefault(this,3,0)};/** @param {number} value */proto.inorbit.TeleopGoCommand.prototype.setAngularVelocity=function(value){jspb.Message.setProto3FloatField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.KeyValueMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.KeyValueMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.KeyValueMessage.displayName="proto.inorbit.KeyValueMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.KeyValueMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.KeyValueMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.KeyValueMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.KeyValueMessage.toObject=function(includeInstance,msg){var f,obj={key:jspb.Message.getFieldWithDefault(msg,1,""),value:jspb.Message.getFieldWithDefault(msg,2,"")};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.KeyValueMessage}
 */proto.inorbit.KeyValueMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.KeyValueMessage;return proto.inorbit.KeyValueMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.KeyValueMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.KeyValueMessage}
 */proto.inorbit.KeyValueMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setKey(value);break;case 2:var value=reader.readString();msg.setValue(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.KeyValueMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.KeyValueMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.KeyValueMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.KeyValueMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getKey();if(f.length>0){writer.writeString(1,f)}f=message.getValue();if(f.length>0){writer.writeString(2,f)}};/**
 * optional string key = 1;
 * @return {string}
 */proto.inorbit.KeyValueMessage.prototype.getKey=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.KeyValueMessage.prototype.setKey=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional string value = 2;
 * @return {string}
 */proto.inorbit.KeyValueMessage.prototype.getValue=function(){return jspb.Message.getFieldWithDefault(this,2,"")};/** @param {string} value */proto.inorbit.KeyValueMessage.prototype.setValue=function(value){jspb.Message.setProto3StringField(this,2,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RosDiagnosticsField=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.RosDiagnosticsField.repeatedFields_,null)};goog.inherits(proto.inorbit.RosDiagnosticsField,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RosDiagnosticsField.displayName="proto.inorbit.RosDiagnosticsField"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.RosDiagnosticsField.repeatedFields_=[4];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RosDiagnosticsField.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RosDiagnosticsField.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RosDiagnosticsField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosDiagnosticsField.toObject=function(includeInstance,msg){var f,obj={name:jspb.Message.getFieldWithDefault(msg,1,""),level:jspb.Message.getFieldWithDefault(msg,2,0),msg:jspb.Message.getFieldWithDefault(msg,3,""),keyValuesList:jspb.Message.toObjectList(msg.getKeyValuesList(),proto.inorbit.KeyValueMessage.toObject,includeInstance),hasLevel:jspb.Message.getFieldWithDefault(msg,5,false)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RosDiagnosticsField}
 */proto.inorbit.RosDiagnosticsField.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RosDiagnosticsField;return proto.inorbit.RosDiagnosticsField.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RosDiagnosticsField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RosDiagnosticsField}
 */proto.inorbit.RosDiagnosticsField.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setName(value);break;case 2:var value=reader.readInt32();msg.setLevel(value);break;case 3:var value=reader.readString();msg.setMsg(value);break;case 4:var value=new proto.inorbit.KeyValueMessage;reader.readMessage(value,proto.inorbit.KeyValueMessage.deserializeBinaryFromReader);msg.addKeyValues(value);break;case 5:var value=reader.readBool();msg.setHasLevel(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RosDiagnosticsField.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RosDiagnosticsField.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RosDiagnosticsField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosDiagnosticsField.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getName();if(f.length>0){writer.writeString(1,f)}f=message.getLevel();if(f!==0){writer.writeInt32(2,f)}f=message.getMsg();if(f.length>0){writer.writeString(3,f)}f=message.getKeyValuesList();if(f.length>0){writer.writeRepeatedMessage(4,f,proto.inorbit.KeyValueMessage.serializeBinaryToWriter)}f=message.getHasLevel();if(f){writer.writeBool(5,f)}};/**
 * optional string name = 1;
 * @return {string}
 */proto.inorbit.RosDiagnosticsField.prototype.getName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.RosDiagnosticsField.prototype.setName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * optional int32 level = 2;
 * @return {number}
 */proto.inorbit.RosDiagnosticsField.prototype.getLevel=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.RosDiagnosticsField.prototype.setLevel=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional string msg = 3;
 * @return {string}
 */proto.inorbit.RosDiagnosticsField.prototype.getMsg=function(){return jspb.Message.getFieldWithDefault(this,3,"")};/** @param {string} value */proto.inorbit.RosDiagnosticsField.prototype.setMsg=function(value){jspb.Message.setProto3StringField(this,3,value)};/**
 * repeated KeyValueMessage key_values = 4;
 * @return {!Array.<!proto.inorbit.KeyValueMessage>}
 */proto.inorbit.RosDiagnosticsField.prototype.getKeyValuesList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.KeyValueMessage,4)};/** @param {!Array.<!proto.inorbit.KeyValueMessage>} value */proto.inorbit.RosDiagnosticsField.prototype.setKeyValuesList=function(value){jspb.Message.setRepeatedWrapperField(this,4,value)};/**
 * @param {!proto.inorbit.KeyValueMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.KeyValueMessage}
 */proto.inorbit.RosDiagnosticsField.prototype.addKeyValues=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,4,opt_value,proto.inorbit.KeyValueMessage,opt_index)};proto.inorbit.RosDiagnosticsField.prototype.clearKeyValuesList=function(){this.setKeyValuesList([])};/**
 * optional bool has_level = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RosDiagnosticsField.prototype.getHasLevel=function(){return jspb.Message.getFieldWithDefault(this,5,false)};/** @param {boolean} value */proto.inorbit.RosDiagnosticsField.prototype.setHasLevel=function(value){jspb.Message.setProto3BooleanField(this,5,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RosDiagnosticsMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.RosDiagnosticsMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.RosDiagnosticsMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RosDiagnosticsMessage.displayName="proto.inorbit.RosDiagnosticsMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.RosDiagnosticsMessage.repeatedFields_=[2];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RosDiagnosticsMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RosDiagnosticsMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RosDiagnosticsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosDiagnosticsMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),fieldsList:jspb.Message.toObjectList(msg.getFieldsList(),proto.inorbit.RosDiagnosticsField.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RosDiagnosticsMessage}
 */proto.inorbit.RosDiagnosticsMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RosDiagnosticsMessage;return proto.inorbit.RosDiagnosticsMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RosDiagnosticsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RosDiagnosticsMessage}
 */proto.inorbit.RosDiagnosticsMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=new proto.inorbit.RosDiagnosticsField;reader.readMessage(value,proto.inorbit.RosDiagnosticsField.deserializeBinaryFromReader);msg.addFields(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RosDiagnosticsMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RosDiagnosticsMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RosDiagnosticsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosDiagnosticsMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getFieldsList();if(f.length>0){writer.writeRepeatedMessage(2,f,proto.inorbit.RosDiagnosticsField.serializeBinaryToWriter)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.RosDiagnosticsMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.RosDiagnosticsMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * repeated RosDiagnosticsField fields = 2;
 * @return {!Array.<!proto.inorbit.RosDiagnosticsField>}
 */proto.inorbit.RosDiagnosticsMessage.prototype.getFieldsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.RosDiagnosticsField,2)};/** @param {!Array.<!proto.inorbit.RosDiagnosticsField>} value */proto.inorbit.RosDiagnosticsMessage.prototype.setFieldsList=function(value){jspb.Message.setRepeatedWrapperField(this,2,value)};/**
 * @param {!proto.inorbit.RosDiagnosticsField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.RosDiagnosticsField}
 */proto.inorbit.RosDiagnosticsMessage.prototype.addFields=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,2,opt_value,proto.inorbit.RosDiagnosticsField,opt_index)};proto.inorbit.RosDiagnosticsMessage.prototype.clearFieldsList=function(){this.setFieldsList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.RosDiagnosticsStatusMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null)};goog.inherits(proto.inorbit.RosDiagnosticsStatusMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.RosDiagnosticsStatusMessage.displayName="proto.inorbit.RosDiagnosticsStatusMessage"}if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.RosDiagnosticsStatusMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.RosDiagnosticsStatusMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.RosDiagnosticsStatusMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosDiagnosticsStatusMessage.toObject=function(includeInstance,msg){var f,obj={ts:jspb.Message.getFieldWithDefault(msg,1,0),status:jspb.Message.getFieldWithDefault(msg,2,0),hasStatus:jspb.Message.getFieldWithDefault(msg,3,false)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.RosDiagnosticsStatusMessage}
 */proto.inorbit.RosDiagnosticsStatusMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.RosDiagnosticsStatusMessage;return proto.inorbit.RosDiagnosticsStatusMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.RosDiagnosticsStatusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.RosDiagnosticsStatusMessage}
 */proto.inorbit.RosDiagnosticsStatusMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readInt64();msg.setTs(value);break;case 2:var value=reader.readInt32();msg.setStatus(value);break;case 3:var value=reader.readBool();msg.setHasStatus(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.RosDiagnosticsStatusMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.RosDiagnosticsStatusMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.RosDiagnosticsStatusMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.RosDiagnosticsStatusMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getTs();if(f!==0){writer.writeInt64(1,f)}f=message.getStatus();if(f!==0){writer.writeInt32(2,f)}f=message.getHasStatus();if(f){writer.writeBool(3,f)}};/**
 * optional int64 ts = 1;
 * @return {number}
 */proto.inorbit.RosDiagnosticsStatusMessage.prototype.getTs=function(){return jspb.Message.getFieldWithDefault(this,1,0)};/** @param {number} value */proto.inorbit.RosDiagnosticsStatusMessage.prototype.setTs=function(value){jspb.Message.setProto3IntField(this,1,value)};/**
 * optional int32 status = 2;
 * @return {number}
 */proto.inorbit.RosDiagnosticsStatusMessage.prototype.getStatus=function(){return jspb.Message.getFieldWithDefault(this,2,0)};/** @param {number} value */proto.inorbit.RosDiagnosticsStatusMessage.prototype.setStatus=function(value){jspb.Message.setProto3IntField(this,2,value)};/**
 * optional bool has_status = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */proto.inorbit.RosDiagnosticsStatusMessage.prototype.getHasStatus=function(){return jspb.Message.getFieldWithDefault(this,3,false)};/** @param {boolean} value */proto.inorbit.RosDiagnosticsStatusMessage.prototype.setHasStatus=function(value){jspb.Message.setProto3BooleanField(this,3,value)};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.StateOptions=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.StateOptions.repeatedFields_,null)};goog.inherits(proto.inorbit.StateOptions,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.StateOptions.displayName="proto.inorbit.StateOptions"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.StateOptions.repeatedFields_=[2];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.StateOptions.prototype.toObject=function(opt_includeInstance){return proto.inorbit.StateOptions.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.StateOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.StateOptions.toObject=function(includeInstance,msg){var f,obj={stateName:jspb.Message.getFieldWithDefault(msg,1,""),valuesList:jspb.Message.getRepeatedField(msg,2)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.StateOptions}
 */proto.inorbit.StateOptions.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.StateOptions;return proto.inorbit.StateOptions.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.StateOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.StateOptions}
 */proto.inorbit.StateOptions.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setStateName(value);break;case 2:var value=reader.readString();msg.addValues(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.StateOptions.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.StateOptions.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.StateOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.StateOptions.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getStateName();if(f.length>0){writer.writeString(1,f)}f=message.getValuesList();if(f.length>0){writer.writeRepeatedString(2,f)}};/**
 * optional string state_name = 1;
 * @return {string}
 */proto.inorbit.StateOptions.prototype.getStateName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.StateOptions.prototype.setStateName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * repeated string values = 2;
 * @return {!Array.<string>}
 */proto.inorbit.StateOptions.prototype.getValuesList=function(){return jspb.Message.getRepeatedField(this,2)};/** @param {!Array.<string>} value */proto.inorbit.StateOptions.prototype.setValuesList=function(value){jspb.Message.setField(this,2,value||[])};/**
 * @param {!string} value
 * @param {number=} opt_index
 */proto.inorbit.StateOptions.prototype.addValues=function(value,opt_index){jspb.Message.addToRepeatedField(this,2,value,opt_index)};proto.inorbit.StateOptions.prototype.clearValuesList=function(){this.setValuesList([])};/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */proto.inorbit.ModuleStateOptionsMessage=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.inorbit.ModuleStateOptionsMessage.repeatedFields_,null)};goog.inherits(proto.inorbit.ModuleStateOptionsMessage,jspb.Message);if(goog.DEBUG&&!COMPILED){proto.inorbit.ModuleStateOptionsMessage.displayName="proto.inorbit.ModuleStateOptionsMessage"}/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */proto.inorbit.ModuleStateOptionsMessage.repeatedFields_=[2];if(jspb.Message.GENERATE_TO_OBJECT){/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */proto.inorbit.ModuleStateOptionsMessage.prototype.toObject=function(opt_includeInstance){return proto.inorbit.ModuleStateOptionsMessage.toObject(opt_includeInstance,this)};/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inorbit.ModuleStateOptionsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.ModuleStateOptionsMessage.toObject=function(includeInstance,msg){var f,obj={moduleName:jspb.Message.getFieldWithDefault(msg,1,""),stateOptionsList:jspb.Message.toObjectList(msg.getStateOptionsList(),proto.inorbit.StateOptions.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg}return obj}}/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inorbit.ModuleStateOptionsMessage}
 */proto.inorbit.ModuleStateOptionsMessage.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.inorbit.ModuleStateOptionsMessage;return proto.inorbit.ModuleStateOptionsMessage.deserializeBinaryFromReader(msg,reader)};/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inorbit.ModuleStateOptionsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inorbit.ModuleStateOptionsMessage}
 */proto.inorbit.ModuleStateOptionsMessage.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break}var field=reader.getFieldNumber();switch(field){case 1:var value=reader.readString();msg.setModuleName(value);break;case 2:var value=new proto.inorbit.StateOptions;reader.readMessage(value,proto.inorbit.StateOptions.deserializeBinaryFromReader);msg.addStateOptions(value);break;default:reader.skipField();break;}}return msg};/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */proto.inorbit.ModuleStateOptionsMessage.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter;proto.inorbit.ModuleStateOptionsMessage.serializeBinaryToWriter(this,writer);return writer.getResultBuffer()};/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inorbit.ModuleStateOptionsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */proto.inorbit.ModuleStateOptionsMessage.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getModuleName();if(f.length>0){writer.writeString(1,f)}f=message.getStateOptionsList();if(f.length>0){writer.writeRepeatedMessage(2,f,proto.inorbit.StateOptions.serializeBinaryToWriter)}};/**
 * optional string module_name = 1;
 * @return {string}
 */proto.inorbit.ModuleStateOptionsMessage.prototype.getModuleName=function(){return jspb.Message.getFieldWithDefault(this,1,"")};/** @param {string} value */proto.inorbit.ModuleStateOptionsMessage.prototype.setModuleName=function(value){jspb.Message.setProto3StringField(this,1,value)};/**
 * repeated StateOptions state_options = 2;
 * @return {!Array.<!proto.inorbit.StateOptions>}
 */proto.inorbit.ModuleStateOptionsMessage.prototype.getStateOptionsList=function(){return jspb.Message.getRepeatedWrapperField(this,proto.inorbit.StateOptions,2)};/** @param {!Array.<!proto.inorbit.StateOptions>} value */proto.inorbit.ModuleStateOptionsMessage.prototype.setStateOptionsList=function(value){jspb.Message.setRepeatedWrapperField(this,2,value)};/**
 * @param {!proto.inorbit.StateOptions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inorbit.StateOptions}
 */proto.inorbit.ModuleStateOptionsMessage.prototype.addStateOptions=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,2,opt_value,proto.inorbit.StateOptions,opt_index)};proto.inorbit.ModuleStateOptionsMessage.prototype.clearStateOptionsList=function(){this.setStateOptionsList([])};/**
 * @enum {number}
 */proto.inorbit.Nav2DWaypointFrame={UNKNOWN:0,MAP:1,ROBOT:2};goog.object.extend(exports,proto.inorbit);
//# sourceMappingURL=inorbit_pb.js.map